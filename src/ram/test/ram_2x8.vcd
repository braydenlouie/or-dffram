$date
	Tue Jul  1 16:42:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RAM2x8_tb $end
$var wire 8 ! Q [7:0] $end
$var reg 8 " D [7:0] $end
$var reg 1 # addr $end
$var reg 1 $ clk $end
$var reg 1 % we $end
$scope module dut $end
$var wire 8 & D [7:0] $end
$var wire 8 ' Q [7:0] $end
$var wire 1 # addr $end
$var wire 1 $ clk $end
$var wire 1 ( \storage_0_0.decoder0 $end
$var wire 1 % we $end
$var wire 1 ) \storage_1_0.we0 $end
$var wire 1 * \storage_1_0.select0_b $end
$var wire 1 + \storage_1_0.gclock $end
$var wire 1 , \storage_1_0.decoder0 $end
$var wire 1 - \storage_1_0.clock_b $end
$var wire 1 . \storage_1_0.bit[7].storage $end
$var wire 1 / \storage_1_0.bit[6].storage $end
$var wire 1 0 \storage_1_0.bit[5].storage $end
$var wire 1 1 \storage_1_0.bit[4].storage $end
$var wire 1 2 \storage_1_0.bit[3].storage $end
$var wire 1 3 \storage_1_0.bit[2].storage $end
$var wire 1 4 \storage_1_0.bit[1].storage $end
$var wire 1 5 \storage_1_0.bit[0].storage $end
$var wire 1 6 \storage_0_0.we0 $end
$var wire 1 7 \storage_0_0.select0_b $end
$var wire 1 8 \storage_0_0.gclock $end
$var wire 1 9 \storage_0_0.clock_b $end
$var wire 1 : \storage_0_0.bit[7].storage $end
$var wire 1 ; \storage_0_0.bit[6].storage $end
$var wire 1 < \storage_0_0.bit[5].storage $end
$var wire 1 = \storage_0_0.bit[4].storage $end
$var wire 1 > \storage_0_0.bit[3].storage $end
$var wire 1 ? \storage_0_0.bit[2].storage $end
$var wire 1 @ \storage_0_0.bit[1].storage $end
$var wire 1 A \storage_0_0.bit[0].storage $end
$var wire 1 B \Di_nets[7].net $end
$var wire 1 C \Di_nets[6].net $end
$var wire 1 D \Di_nets[5].net $end
$var wire 1 E \Di_nets[4].net $end
$var wire 1 F \Di_nets[3].net $end
$var wire 1 G \Di_nets[2].net $end
$var wire 1 H \Di_nets[1].net $end
$var wire 1 I \Di_nets[0].net $end
$scope module buffer.bit[0]_filler0 $end
$var wire 1 J VGND $end
$var wire 1 K VNB $end
$var wire 1 L VPB $end
$var wire 1 M VPWR $end
$scope module base $end
$var wire 1 N VGND $end
$var wire 1 O VNB $end
$var wire 1 P VPB $end
$var wire 1 Q VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler1 $end
$var wire 1 R VGND $end
$var wire 1 S VNB $end
$var wire 1 T VPB $end
$var wire 1 U VPWR $end
$scope module base $end
$var wire 1 V VGND $end
$var wire 1 W VNB $end
$var wire 1 X VPB $end
$var wire 1 Y VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler2 $end
$var wire 1 Z VGND $end
$var wire 1 [ VNB $end
$var wire 1 \ VPB $end
$var wire 1 ] VPWR $end
$scope module base $end
$var wire 1 ^ VGND $end
$var wire 1 _ VNB $end
$var wire 1 ` VPB $end
$var wire 1 a VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler3 $end
$var wire 1 b VGND $end
$var wire 1 c VNB $end
$var wire 1 d VPB $end
$var wire 1 e VPWR $end
$scope module base $end
$var wire 1 f VGND $end
$var wire 1 g VNB $end
$var wire 1 h VPB $end
$var wire 1 i VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler4 $end
$var wire 1 j VGND $end
$var wire 1 k VNB $end
$var wire 1 l VPB $end
$var wire 1 m VPWR $end
$scope module base $end
$var wire 1 n VGND $end
$var wire 1 o VNB $end
$var wire 1 p VPB $end
$var wire 1 q VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler5 $end
$var wire 1 r VGND $end
$var wire 1 s VNB $end
$var wire 1 t VPB $end
$var wire 1 u VPWR $end
$scope module base $end
$var wire 1 v VGND $end
$var wire 1 w VNB $end
$var wire 1 x VPB $end
$var wire 1 y VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler6 $end
$var wire 1 z VGND $end
$var wire 1 { VNB $end
$var wire 1 | VPB $end
$var wire 1 } VPWR $end
$scope module base $end
$var wire 1 ~ VGND $end
$var wire 1 !" VNB $end
$var wire 1 "" VPB $end
$var wire 1 #" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler7 $end
$var wire 1 $" VGND $end
$var wire 1 %" VNB $end
$var wire 1 &" VPB $end
$var wire 1 '" VPWR $end
$scope module base $end
$var wire 1 (" VGND $end
$var wire 1 )" VNB $end
$var wire 1 *" VPB $end
$var wire 1 +" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler0 $end
$var wire 1 ," VGND $end
$var wire 1 -" VNB $end
$var wire 1 ." VPB $end
$var wire 1 /" VPWR $end
$scope module base $end
$var wire 1 0" VGND $end
$var wire 1 1" VNB $end
$var wire 1 2" VPB $end
$var wire 1 3" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler1 $end
$var wire 1 4" VGND $end
$var wire 1 5" VNB $end
$var wire 1 6" VPB $end
$var wire 1 7" VPWR $end
$scope module base $end
$var wire 1 8" VGND $end
$var wire 1 9" VNB $end
$var wire 1 :" VPB $end
$var wire 1 ;" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler2 $end
$var wire 1 <" VGND $end
$var wire 1 =" VNB $end
$var wire 1 >" VPB $end
$var wire 1 ?" VPWR $end
$scope module base $end
$var wire 1 @" VGND $end
$var wire 1 A" VNB $end
$var wire 1 B" VPB $end
$var wire 1 C" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler3 $end
$var wire 1 D" VGND $end
$var wire 1 E" VNB $end
$var wire 1 F" VPB $end
$var wire 1 G" VPWR $end
$scope module base $end
$var wire 1 H" VGND $end
$var wire 1 I" VNB $end
$var wire 1 J" VPB $end
$var wire 1 K" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler4 $end
$var wire 1 L" VGND $end
$var wire 1 M" VNB $end
$var wire 1 N" VPB $end
$var wire 1 O" VPWR $end
$scope module base $end
$var wire 1 P" VGND $end
$var wire 1 Q" VNB $end
$var wire 1 R" VPB $end
$var wire 1 S" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler5 $end
$var wire 1 T" VGND $end
$var wire 1 U" VNB $end
$var wire 1 V" VPB $end
$var wire 1 W" VPWR $end
$scope module base $end
$var wire 1 X" VGND $end
$var wire 1 Y" VNB $end
$var wire 1 Z" VPB $end
$var wire 1 [" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler6 $end
$var wire 1 \" VGND $end
$var wire 1 ]" VNB $end
$var wire 1 ^" VPB $end
$var wire 1 _" VPWR $end
$scope module base $end
$var wire 1 `" VGND $end
$var wire 1 a" VNB $end
$var wire 1 b" VPB $end
$var wire 1 c" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler7 $end
$var wire 1 d" VGND $end
$var wire 1 e" VNB $end
$var wire 1 f" VPB $end
$var wire 1 g" VPWR $end
$scope module base $end
$var wire 1 h" VGND $end
$var wire 1 i" VNB $end
$var wire 1 j" VPB $end
$var wire 1 k" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler0 $end
$var wire 1 l" VGND $end
$var wire 1 m" VNB $end
$var wire 1 n" VPB $end
$var wire 1 o" VPWR $end
$scope module base $end
$var wire 1 p" VGND $end
$var wire 1 q" VNB $end
$var wire 1 r" VPB $end
$var wire 1 s" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler1 $end
$var wire 1 t" VGND $end
$var wire 1 u" VNB $end
$var wire 1 v" VPB $end
$var wire 1 w" VPWR $end
$scope module base $end
$var wire 1 x" VGND $end
$var wire 1 y" VNB $end
$var wire 1 z" VPB $end
$var wire 1 {" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler2 $end
$var wire 1 |" VGND $end
$var wire 1 }" VNB $end
$var wire 1 ~" VPB $end
$var wire 1 !# VPWR $end
$scope module base $end
$var wire 1 "# VGND $end
$var wire 1 ## VNB $end
$var wire 1 $# VPB $end
$var wire 1 %# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler3 $end
$var wire 1 &# VGND $end
$var wire 1 '# VNB $end
$var wire 1 (# VPB $end
$var wire 1 )# VPWR $end
$scope module base $end
$var wire 1 *# VGND $end
$var wire 1 +# VNB $end
$var wire 1 ,# VPB $end
$var wire 1 -# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler4 $end
$var wire 1 .# VGND $end
$var wire 1 /# VNB $end
$var wire 1 0# VPB $end
$var wire 1 1# VPWR $end
$scope module base $end
$var wire 1 2# VGND $end
$var wire 1 3# VNB $end
$var wire 1 4# VPB $end
$var wire 1 5# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler5 $end
$var wire 1 6# VGND $end
$var wire 1 7# VNB $end
$var wire 1 8# VPB $end
$var wire 1 9# VPWR $end
$scope module base $end
$var wire 1 :# VGND $end
$var wire 1 ;# VNB $end
$var wire 1 <# VPB $end
$var wire 1 =# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler6 $end
$var wire 1 ># VGND $end
$var wire 1 ?# VNB $end
$var wire 1 @# VPB $end
$var wire 1 A# VPWR $end
$scope module base $end
$var wire 1 B# VGND $end
$var wire 1 C# VNB $end
$var wire 1 D# VPB $end
$var wire 1 E# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler7 $end
$var wire 1 F# VGND $end
$var wire 1 G# VNB $end
$var wire 1 H# VPB $end
$var wire 1 I# VPWR $end
$scope module base $end
$var wire 1 J# VGND $end
$var wire 1 K# VNB $end
$var wire 1 L# VPB $end
$var wire 1 M# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler0 $end
$var wire 1 N# VGND $end
$var wire 1 O# VNB $end
$var wire 1 P# VPB $end
$var wire 1 Q# VPWR $end
$scope module base $end
$var wire 1 R# VGND $end
$var wire 1 S# VNB $end
$var wire 1 T# VPB $end
$var wire 1 U# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler1 $end
$var wire 1 V# VGND $end
$var wire 1 W# VNB $end
$var wire 1 X# VPB $end
$var wire 1 Y# VPWR $end
$scope module base $end
$var wire 1 Z# VGND $end
$var wire 1 [# VNB $end
$var wire 1 \# VPB $end
$var wire 1 ]# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler2 $end
$var wire 1 ^# VGND $end
$var wire 1 _# VNB $end
$var wire 1 `# VPB $end
$var wire 1 a# VPWR $end
$scope module base $end
$var wire 1 b# VGND $end
$var wire 1 c# VNB $end
$var wire 1 d# VPB $end
$var wire 1 e# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler3 $end
$var wire 1 f# VGND $end
$var wire 1 g# VNB $end
$var wire 1 h# VPB $end
$var wire 1 i# VPWR $end
$scope module base $end
$var wire 1 j# VGND $end
$var wire 1 k# VNB $end
$var wire 1 l# VPB $end
$var wire 1 m# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler4 $end
$var wire 1 n# VGND $end
$var wire 1 o# VNB $end
$var wire 1 p# VPB $end
$var wire 1 q# VPWR $end
$scope module base $end
$var wire 1 r# VGND $end
$var wire 1 s# VNB $end
$var wire 1 t# VPB $end
$var wire 1 u# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler5 $end
$var wire 1 v# VGND $end
$var wire 1 w# VNB $end
$var wire 1 x# VPB $end
$var wire 1 y# VPWR $end
$scope module base $end
$var wire 1 z# VGND $end
$var wire 1 {# VNB $end
$var wire 1 |# VPB $end
$var wire 1 }# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler6 $end
$var wire 1 ~# VGND $end
$var wire 1 !$ VNB $end
$var wire 1 "$ VPB $end
$var wire 1 #$ VPWR $end
$scope module base $end
$var wire 1 $$ VGND $end
$var wire 1 %$ VNB $end
$var wire 1 &$ VPB $end
$var wire 1 '$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler7 $end
$var wire 1 ($ VGND $end
$var wire 1 )$ VNB $end
$var wire 1 *$ VPB $end
$var wire 1 +$ VPWR $end
$scope module base $end
$var wire 1 ,$ VGND $end
$var wire 1 -$ VNB $end
$var wire 1 .$ VPB $end
$var wire 1 /$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler0 $end
$var wire 1 0$ VGND $end
$var wire 1 1$ VNB $end
$var wire 1 2$ VPB $end
$var wire 1 3$ VPWR $end
$scope module base $end
$var wire 1 4$ VGND $end
$var wire 1 5$ VNB $end
$var wire 1 6$ VPB $end
$var wire 1 7$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler1 $end
$var wire 1 8$ VGND $end
$var wire 1 9$ VNB $end
$var wire 1 :$ VPB $end
$var wire 1 ;$ VPWR $end
$scope module base $end
$var wire 1 <$ VGND $end
$var wire 1 =$ VNB $end
$var wire 1 >$ VPB $end
$var wire 1 ?$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler2 $end
$var wire 1 @$ VGND $end
$var wire 1 A$ VNB $end
$var wire 1 B$ VPB $end
$var wire 1 C$ VPWR $end
$scope module base $end
$var wire 1 D$ VGND $end
$var wire 1 E$ VNB $end
$var wire 1 F$ VPB $end
$var wire 1 G$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler3 $end
$var wire 1 H$ VGND $end
$var wire 1 I$ VNB $end
$var wire 1 J$ VPB $end
$var wire 1 K$ VPWR $end
$scope module base $end
$var wire 1 L$ VGND $end
$var wire 1 M$ VNB $end
$var wire 1 N$ VPB $end
$var wire 1 O$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler4 $end
$var wire 1 P$ VGND $end
$var wire 1 Q$ VNB $end
$var wire 1 R$ VPB $end
$var wire 1 S$ VPWR $end
$scope module base $end
$var wire 1 T$ VGND $end
$var wire 1 U$ VNB $end
$var wire 1 V$ VPB $end
$var wire 1 W$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler5 $end
$var wire 1 X$ VGND $end
$var wire 1 Y$ VNB $end
$var wire 1 Z$ VPB $end
$var wire 1 [$ VPWR $end
$scope module base $end
$var wire 1 \$ VGND $end
$var wire 1 ]$ VNB $end
$var wire 1 ^$ VPB $end
$var wire 1 _$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler6 $end
$var wire 1 `$ VGND $end
$var wire 1 a$ VNB $end
$var wire 1 b$ VPB $end
$var wire 1 c$ VPWR $end
$scope module base $end
$var wire 1 d$ VGND $end
$var wire 1 e$ VNB $end
$var wire 1 f$ VPB $end
$var wire 1 g$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler7 $end
$var wire 1 h$ VGND $end
$var wire 1 i$ VNB $end
$var wire 1 j$ VPB $end
$var wire 1 k$ VPWR $end
$scope module base $end
$var wire 1 l$ VGND $end
$var wire 1 m$ VNB $end
$var wire 1 n$ VPB $end
$var wire 1 o$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler0 $end
$var wire 1 p$ VGND $end
$var wire 1 q$ VNB $end
$var wire 1 r$ VPB $end
$var wire 1 s$ VPWR $end
$scope module base $end
$var wire 1 t$ VGND $end
$var wire 1 u$ VNB $end
$var wire 1 v$ VPB $end
$var wire 1 w$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler1 $end
$var wire 1 x$ VGND $end
$var wire 1 y$ VNB $end
$var wire 1 z$ VPB $end
$var wire 1 {$ VPWR $end
$scope module base $end
$var wire 1 |$ VGND $end
$var wire 1 }$ VNB $end
$var wire 1 ~$ VPB $end
$var wire 1 !% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler2 $end
$var wire 1 "% VGND $end
$var wire 1 #% VNB $end
$var wire 1 $% VPB $end
$var wire 1 %% VPWR $end
$scope module base $end
$var wire 1 &% VGND $end
$var wire 1 '% VNB $end
$var wire 1 (% VPB $end
$var wire 1 )% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler3 $end
$var wire 1 *% VGND $end
$var wire 1 +% VNB $end
$var wire 1 ,% VPB $end
$var wire 1 -% VPWR $end
$scope module base $end
$var wire 1 .% VGND $end
$var wire 1 /% VNB $end
$var wire 1 0% VPB $end
$var wire 1 1% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler4 $end
$var wire 1 2% VGND $end
$var wire 1 3% VNB $end
$var wire 1 4% VPB $end
$var wire 1 5% VPWR $end
$scope module base $end
$var wire 1 6% VGND $end
$var wire 1 7% VNB $end
$var wire 1 8% VPB $end
$var wire 1 9% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler5 $end
$var wire 1 :% VGND $end
$var wire 1 ;% VNB $end
$var wire 1 <% VPB $end
$var wire 1 =% VPWR $end
$scope module base $end
$var wire 1 >% VGND $end
$var wire 1 ?% VNB $end
$var wire 1 @% VPB $end
$var wire 1 A% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler6 $end
$var wire 1 B% VGND $end
$var wire 1 C% VNB $end
$var wire 1 D% VPB $end
$var wire 1 E% VPWR $end
$scope module base $end
$var wire 1 F% VGND $end
$var wire 1 G% VNB $end
$var wire 1 H% VPB $end
$var wire 1 I% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler7 $end
$var wire 1 J% VGND $end
$var wire 1 K% VNB $end
$var wire 1 L% VPB $end
$var wire 1 M% VPWR $end
$scope module base $end
$var wire 1 N% VGND $end
$var wire 1 O% VNB $end
$var wire 1 P% VPB $end
$var wire 1 Q% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler0 $end
$var wire 1 R% VGND $end
$var wire 1 S% VNB $end
$var wire 1 T% VPB $end
$var wire 1 U% VPWR $end
$scope module base $end
$var wire 1 V% VGND $end
$var wire 1 W% VNB $end
$var wire 1 X% VPB $end
$var wire 1 Y% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler1 $end
$var wire 1 Z% VGND $end
$var wire 1 [% VNB $end
$var wire 1 \% VPB $end
$var wire 1 ]% VPWR $end
$scope module base $end
$var wire 1 ^% VGND $end
$var wire 1 _% VNB $end
$var wire 1 `% VPB $end
$var wire 1 a% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler2 $end
$var wire 1 b% VGND $end
$var wire 1 c% VNB $end
$var wire 1 d% VPB $end
$var wire 1 e% VPWR $end
$scope module base $end
$var wire 1 f% VGND $end
$var wire 1 g% VNB $end
$var wire 1 h% VPB $end
$var wire 1 i% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler3 $end
$var wire 1 j% VGND $end
$var wire 1 k% VNB $end
$var wire 1 l% VPB $end
$var wire 1 m% VPWR $end
$scope module base $end
$var wire 1 n% VGND $end
$var wire 1 o% VNB $end
$var wire 1 p% VPB $end
$var wire 1 q% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler4 $end
$var wire 1 r% VGND $end
$var wire 1 s% VNB $end
$var wire 1 t% VPB $end
$var wire 1 u% VPWR $end
$scope module base $end
$var wire 1 v% VGND $end
$var wire 1 w% VNB $end
$var wire 1 x% VPB $end
$var wire 1 y% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler5 $end
$var wire 1 z% VGND $end
$var wire 1 {% VNB $end
$var wire 1 |% VPB $end
$var wire 1 }% VPWR $end
$scope module base $end
$var wire 1 ~% VGND $end
$var wire 1 !& VNB $end
$var wire 1 "& VPB $end
$var wire 1 #& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler6 $end
$var wire 1 $& VGND $end
$var wire 1 %& VNB $end
$var wire 1 && VPB $end
$var wire 1 '& VPWR $end
$scope module base $end
$var wire 1 (& VGND $end
$var wire 1 )& VNB $end
$var wire 1 *& VPB $end
$var wire 1 +& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler7 $end
$var wire 1 ,& VGND $end
$var wire 1 -& VNB $end
$var wire 1 .& VPB $end
$var wire 1 /& VPWR $end
$scope module base $end
$var wire 1 0& VGND $end
$var wire 1 1& VNB $end
$var wire 1 2& VPB $end
$var wire 1 3& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler0 $end
$var wire 1 4& VGND $end
$var wire 1 5& VNB $end
$var wire 1 6& VPB $end
$var wire 1 7& VPWR $end
$scope module base $end
$var wire 1 8& VGND $end
$var wire 1 9& VNB $end
$var wire 1 :& VPB $end
$var wire 1 ;& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler1 $end
$var wire 1 <& VGND $end
$var wire 1 =& VNB $end
$var wire 1 >& VPB $end
$var wire 1 ?& VPWR $end
$scope module base $end
$var wire 1 @& VGND $end
$var wire 1 A& VNB $end
$var wire 1 B& VPB $end
$var wire 1 C& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler2 $end
$var wire 1 D& VGND $end
$var wire 1 E& VNB $end
$var wire 1 F& VPB $end
$var wire 1 G& VPWR $end
$scope module base $end
$var wire 1 H& VGND $end
$var wire 1 I& VNB $end
$var wire 1 J& VPB $end
$var wire 1 K& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler3 $end
$var wire 1 L& VGND $end
$var wire 1 M& VNB $end
$var wire 1 N& VPB $end
$var wire 1 O& VPWR $end
$scope module base $end
$var wire 1 P& VGND $end
$var wire 1 Q& VNB $end
$var wire 1 R& VPB $end
$var wire 1 S& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler4 $end
$var wire 1 T& VGND $end
$var wire 1 U& VNB $end
$var wire 1 V& VPB $end
$var wire 1 W& VPWR $end
$scope module base $end
$var wire 1 X& VGND $end
$var wire 1 Y& VNB $end
$var wire 1 Z& VPB $end
$var wire 1 [& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler5 $end
$var wire 1 \& VGND $end
$var wire 1 ]& VNB $end
$var wire 1 ^& VPB $end
$var wire 1 _& VPWR $end
$scope module base $end
$var wire 1 `& VGND $end
$var wire 1 a& VNB $end
$var wire 1 b& VPB $end
$var wire 1 c& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler6 $end
$var wire 1 d& VGND $end
$var wire 1 e& VNB $end
$var wire 1 f& VPB $end
$var wire 1 g& VPWR $end
$scope module base $end
$var wire 1 h& VGND $end
$var wire 1 i& VNB $end
$var wire 1 j& VPB $end
$var wire 1 k& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler7 $end
$var wire 1 l& VGND $end
$var wire 1 m& VNB $end
$var wire 1 n& VPB $end
$var wire 1 o& VPWR $end
$scope module base $end
$var wire 1 p& VGND $end
$var wire 1 q& VNB $end
$var wire 1 r& VPB $end
$var wire 1 s& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.in[0] $end
$var wire 1 t& A $end
$var wire 1 u& VGND $end
$var wire 1 v& VNB $end
$var wire 1 w& VPB $end
$var wire 1 x& VPWR $end
$var wire 1 I X $end
$scope module base $end
$var wire 1 t& A $end
$var wire 1 I X $end
$var wire 1 y& buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[1] $end
$var wire 1 z& A $end
$var wire 1 {& VGND $end
$var wire 1 |& VNB $end
$var wire 1 }& VPB $end
$var wire 1 ~& VPWR $end
$var wire 1 H X $end
$scope module base $end
$var wire 1 z& A $end
$var wire 1 H X $end
$var wire 1 !' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[2] $end
$var wire 1 "' A $end
$var wire 1 #' VGND $end
$var wire 1 $' VNB $end
$var wire 1 %' VPB $end
$var wire 1 &' VPWR $end
$var wire 1 G X $end
$scope module base $end
$var wire 1 "' A $end
$var wire 1 G X $end
$var wire 1 '' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[3] $end
$var wire 1 (' A $end
$var wire 1 )' VGND $end
$var wire 1 *' VNB $end
$var wire 1 +' VPB $end
$var wire 1 ,' VPWR $end
$var wire 1 F X $end
$scope module base $end
$var wire 1 (' A $end
$var wire 1 F X $end
$var wire 1 -' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[4] $end
$var wire 1 .' A $end
$var wire 1 /' VGND $end
$var wire 1 0' VNB $end
$var wire 1 1' VPB $end
$var wire 1 2' VPWR $end
$var wire 1 E X $end
$scope module base $end
$var wire 1 .' A $end
$var wire 1 E X $end
$var wire 1 3' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[5] $end
$var wire 1 4' A $end
$var wire 1 5' VGND $end
$var wire 1 6' VNB $end
$var wire 1 7' VPB $end
$var wire 1 8' VPWR $end
$var wire 1 D X $end
$scope module base $end
$var wire 1 4' A $end
$var wire 1 D X $end
$var wire 1 9' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[6] $end
$var wire 1 :' A $end
$var wire 1 ;' VGND $end
$var wire 1 <' VNB $end
$var wire 1 =' VPB $end
$var wire 1 >' VPWR $end
$var wire 1 C X $end
$scope module base $end
$var wire 1 :' A $end
$var wire 1 C X $end
$var wire 1 ?' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[7] $end
$var wire 1 @' A $end
$var wire 1 A' VGND $end
$var wire 1 B' VNB $end
$var wire 1 C' VPB $end
$var wire 1 D' VPWR $end
$var wire 1 B X $end
$scope module base $end
$var wire 1 @' A $end
$var wire 1 B X $end
$var wire 1 E' buf0_out_X $end
$upscope $end
$upscope $end
$scope module decoder.inv_0 $end
$var wire 1 # A $end
$var wire 1 F' VGND $end
$var wire 1 G' VNB $end
$var wire 1 H' VPB $end
$var wire 1 I' VPWR $end
$var wire 1 , Y $end
$scope module base $end
$var wire 1 # A $end
$var wire 1 , Y $end
$var wire 1 J' not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[0].bit $end
$var wire 1 I D $end
$var wire 1 K' VGND $end
$var wire 1 L' VNB $end
$var wire 1 M' VPB $end
$var wire 1 N' VPWR $end
$var wire 1 A Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 I D $end
$var wire 1 A Q $end
$var wire 1 O' buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 I D $end
$var wire 1 8 GATE $end
$var reg 1 O' Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[0].obuf0 $end
$var wire 1 A A $end
$var wire 1 P' VGND $end
$var wire 1 Q' VNB $end
$var wire 1 R' VPB $end
$var wire 1 S' VPWR $end
$var wire 1 T' Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 A A $end
$var wire 1 T' Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[1].bit $end
$var wire 1 H D $end
$var wire 1 U' VGND $end
$var wire 1 V' VNB $end
$var wire 1 W' VPB $end
$var wire 1 X' VPWR $end
$var wire 1 @ Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 H D $end
$var wire 1 @ Q $end
$var wire 1 Y' buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 H D $end
$var wire 1 8 GATE $end
$var reg 1 Y' Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[1].obuf0 $end
$var wire 1 @ A $end
$var wire 1 Z' VGND $end
$var wire 1 [' VNB $end
$var wire 1 \' VPB $end
$var wire 1 ]' VPWR $end
$var wire 1 ^' Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 @ A $end
$var wire 1 ^' Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[2].bit $end
$var wire 1 G D $end
$var wire 1 _' VGND $end
$var wire 1 `' VNB $end
$var wire 1 a' VPB $end
$var wire 1 b' VPWR $end
$var wire 1 ? Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 G D $end
$var wire 1 ? Q $end
$var wire 1 c' buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 G D $end
$var wire 1 8 GATE $end
$var reg 1 c' Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[2].obuf0 $end
$var wire 1 ? A $end
$var wire 1 d' VGND $end
$var wire 1 e' VNB $end
$var wire 1 f' VPB $end
$var wire 1 g' VPWR $end
$var wire 1 h' Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 ? A $end
$var wire 1 h' Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[3].bit $end
$var wire 1 F D $end
$var wire 1 i' VGND $end
$var wire 1 j' VNB $end
$var wire 1 k' VPB $end
$var wire 1 l' VPWR $end
$var wire 1 > Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 F D $end
$var wire 1 > Q $end
$var wire 1 m' buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 F D $end
$var wire 1 8 GATE $end
$var reg 1 m' Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[3].obuf0 $end
$var wire 1 > A $end
$var wire 1 n' VGND $end
$var wire 1 o' VNB $end
$var wire 1 p' VPB $end
$var wire 1 q' VPWR $end
$var wire 1 r' Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 > A $end
$var wire 1 r' Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[4].bit $end
$var wire 1 E D $end
$var wire 1 s' VGND $end
$var wire 1 t' VNB $end
$var wire 1 u' VPB $end
$var wire 1 v' VPWR $end
$var wire 1 = Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 E D $end
$var wire 1 = Q $end
$var wire 1 w' buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 E D $end
$var wire 1 8 GATE $end
$var reg 1 w' Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[4].obuf0 $end
$var wire 1 = A $end
$var wire 1 x' VGND $end
$var wire 1 y' VNB $end
$var wire 1 z' VPB $end
$var wire 1 {' VPWR $end
$var wire 1 |' Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 = A $end
$var wire 1 |' Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[5].bit $end
$var wire 1 D D $end
$var wire 1 }' VGND $end
$var wire 1 ~' VNB $end
$var wire 1 !( VPB $end
$var wire 1 "( VPWR $end
$var wire 1 < Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 D D $end
$var wire 1 < Q $end
$var wire 1 #( buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 D D $end
$var wire 1 8 GATE $end
$var reg 1 #( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[5].obuf0 $end
$var wire 1 < A $end
$var wire 1 $( VGND $end
$var wire 1 %( VNB $end
$var wire 1 &( VPB $end
$var wire 1 '( VPWR $end
$var wire 1 (( Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 < A $end
$var wire 1 (( Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[6].bit $end
$var wire 1 C D $end
$var wire 1 )( VGND $end
$var wire 1 *( VNB $end
$var wire 1 +( VPB $end
$var wire 1 ,( VPWR $end
$var wire 1 ; Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 C D $end
$var wire 1 ; Q $end
$var wire 1 -( buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 C D $end
$var wire 1 8 GATE $end
$var reg 1 -( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[6].obuf0 $end
$var wire 1 ; A $end
$var wire 1 .( VGND $end
$var wire 1 /( VNB $end
$var wire 1 0( VPB $end
$var wire 1 1( VPWR $end
$var wire 1 2( Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 ; A $end
$var wire 1 2( Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[7].bit $end
$var wire 1 B D $end
$var wire 1 3( VGND $end
$var wire 1 4( VNB $end
$var wire 1 5( VPB $end
$var wire 1 6( VPWR $end
$var wire 1 : Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 B D $end
$var wire 1 : Q $end
$var wire 1 7( buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 B D $end
$var wire 1 8 GATE $end
$var reg 1 7( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[7].obuf0 $end
$var wire 1 : A $end
$var wire 1 8( VGND $end
$var wire 1 9( VNB $end
$var wire 1 :( VPB $end
$var wire 1 ;( VPWR $end
$var wire 1 <( Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 : A $end
$var wire 1 <( Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.cg $end
$var wire 1 =( VGND $end
$var wire 1 >( VNB $end
$var wire 1 ?( VPB $end
$var wire 1 @( VPWR $end
$var wire 1 8 GCLK $end
$var wire 1 6 GATE $end
$var wire 1 9 CLK $end
$scope module base $end
$var wire 1 8 GCLK $end
$var wire 1 A( clkn $end
$var wire 1 B( m0 $end
$var wire 1 6 GATE $end
$var wire 1 9 CLK $end
$scope module dlatch0 $end
$var wire 1 A( GATE $end
$var wire 1 6 D $end
$var reg 1 B( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 C( VGND $end
$var wire 1 D( VNB $end
$var wire 1 E( VPB $end
$var wire 1 F( VPWR $end
$var wire 1 9 Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 9 Y $end
$var wire 1 G( not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_0_0.gcand $end
$var wire 1 ( A $end
$var wire 1 % B $end
$var wire 1 H( VGND $end
$var wire 1 I( VNB $end
$var wire 1 J( VPB $end
$var wire 1 K( VPWR $end
$var wire 1 6 X $end
$scope module base $end
$var wire 1 ( A $end
$var wire 1 % B $end
$var wire 1 6 X $end
$var wire 1 L( and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_0_0.select_inv_0 $end
$var wire 1 ( A $end
$var wire 1 M( VGND $end
$var wire 1 N( VNB $end
$var wire 1 O( VPB $end
$var wire 1 P( VPWR $end
$var wire 1 7 Y $end
$scope module base $end
$var wire 1 ( A $end
$var wire 1 7 Y $end
$var wire 1 Q( not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[0].bit $end
$var wire 1 I D $end
$var wire 1 R( VGND $end
$var wire 1 S( VNB $end
$var wire 1 T( VPB $end
$var wire 1 U( VPWR $end
$var wire 1 5 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 I D $end
$var wire 1 5 Q $end
$var wire 1 V( buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 I D $end
$var wire 1 + GATE $end
$var reg 1 V( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[0].obuf0 $end
$var wire 1 5 A $end
$var wire 1 W( VGND $end
$var wire 1 X( VNB $end
$var wire 1 Y( VPB $end
$var wire 1 Z( VPWR $end
$var wire 1 [( Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 5 A $end
$var wire 1 [( Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[1].bit $end
$var wire 1 H D $end
$var wire 1 \( VGND $end
$var wire 1 ]( VNB $end
$var wire 1 ^( VPB $end
$var wire 1 _( VPWR $end
$var wire 1 4 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 H D $end
$var wire 1 4 Q $end
$var wire 1 `( buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 H D $end
$var wire 1 + GATE $end
$var reg 1 `( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[1].obuf0 $end
$var wire 1 4 A $end
$var wire 1 a( VGND $end
$var wire 1 b( VNB $end
$var wire 1 c( VPB $end
$var wire 1 d( VPWR $end
$var wire 1 e( Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 4 A $end
$var wire 1 e( Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[2].bit $end
$var wire 1 G D $end
$var wire 1 f( VGND $end
$var wire 1 g( VNB $end
$var wire 1 h( VPB $end
$var wire 1 i( VPWR $end
$var wire 1 3 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 G D $end
$var wire 1 3 Q $end
$var wire 1 j( buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 G D $end
$var wire 1 + GATE $end
$var reg 1 j( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[2].obuf0 $end
$var wire 1 3 A $end
$var wire 1 k( VGND $end
$var wire 1 l( VNB $end
$var wire 1 m( VPB $end
$var wire 1 n( VPWR $end
$var wire 1 o( Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 3 A $end
$var wire 1 o( Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[3].bit $end
$var wire 1 F D $end
$var wire 1 p( VGND $end
$var wire 1 q( VNB $end
$var wire 1 r( VPB $end
$var wire 1 s( VPWR $end
$var wire 1 2 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 F D $end
$var wire 1 2 Q $end
$var wire 1 t( buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 F D $end
$var wire 1 + GATE $end
$var reg 1 t( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[3].obuf0 $end
$var wire 1 2 A $end
$var wire 1 u( VGND $end
$var wire 1 v( VNB $end
$var wire 1 w( VPB $end
$var wire 1 x( VPWR $end
$var wire 1 y( Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 2 A $end
$var wire 1 y( Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[4].bit $end
$var wire 1 E D $end
$var wire 1 z( VGND $end
$var wire 1 {( VNB $end
$var wire 1 |( VPB $end
$var wire 1 }( VPWR $end
$var wire 1 1 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 E D $end
$var wire 1 1 Q $end
$var wire 1 ~( buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 E D $end
$var wire 1 + GATE $end
$var reg 1 ~( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[4].obuf0 $end
$var wire 1 1 A $end
$var wire 1 !) VGND $end
$var wire 1 ") VNB $end
$var wire 1 #) VPB $end
$var wire 1 $) VPWR $end
$var wire 1 %) Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 1 A $end
$var wire 1 %) Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[5].bit $end
$var wire 1 D D $end
$var wire 1 &) VGND $end
$var wire 1 ') VNB $end
$var wire 1 () VPB $end
$var wire 1 )) VPWR $end
$var wire 1 0 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 D D $end
$var wire 1 0 Q $end
$var wire 1 *) buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 D D $end
$var wire 1 + GATE $end
$var reg 1 *) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[5].obuf0 $end
$var wire 1 0 A $end
$var wire 1 +) VGND $end
$var wire 1 ,) VNB $end
$var wire 1 -) VPB $end
$var wire 1 .) VPWR $end
$var wire 1 /) Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 0 A $end
$var wire 1 /) Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[6].bit $end
$var wire 1 C D $end
$var wire 1 0) VGND $end
$var wire 1 1) VNB $end
$var wire 1 2) VPB $end
$var wire 1 3) VPWR $end
$var wire 1 / Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 C D $end
$var wire 1 / Q $end
$var wire 1 4) buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 C D $end
$var wire 1 + GATE $end
$var reg 1 4) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[6].obuf0 $end
$var wire 1 / A $end
$var wire 1 5) VGND $end
$var wire 1 6) VNB $end
$var wire 1 7) VPB $end
$var wire 1 8) VPWR $end
$var wire 1 9) Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 / A $end
$var wire 1 9) Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[7].bit $end
$var wire 1 B D $end
$var wire 1 :) VGND $end
$var wire 1 ;) VNB $end
$var wire 1 <) VPB $end
$var wire 1 =) VPWR $end
$var wire 1 . Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 B D $end
$var wire 1 . Q $end
$var wire 1 >) buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 B D $end
$var wire 1 + GATE $end
$var reg 1 >) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[7].obuf0 $end
$var wire 1 . A $end
$var wire 1 ?) VGND $end
$var wire 1 @) VNB $end
$var wire 1 A) VPB $end
$var wire 1 B) VPWR $end
$var wire 1 C) Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 . A $end
$var wire 1 C) Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.cg $end
$var wire 1 D) VGND $end
$var wire 1 E) VNB $end
$var wire 1 F) VPB $end
$var wire 1 G) VPWR $end
$var wire 1 + GCLK $end
$var wire 1 ) GATE $end
$var wire 1 - CLK $end
$scope module base $end
$var wire 1 + GCLK $end
$var wire 1 H) clkn $end
$var wire 1 I) m0 $end
$var wire 1 ) GATE $end
$var wire 1 - CLK $end
$scope module dlatch0 $end
$var wire 1 H) GATE $end
$var wire 1 ) D $end
$var reg 1 I) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 J) VGND $end
$var wire 1 K) VNB $end
$var wire 1 L) VPB $end
$var wire 1 M) VPWR $end
$var wire 1 - Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 - Y $end
$var wire 1 N) not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_1_0.gcand $end
$var wire 1 , A $end
$var wire 1 % B $end
$var wire 1 O) VGND $end
$var wire 1 P) VNB $end
$var wire 1 Q) VPB $end
$var wire 1 R) VPWR $end
$var wire 1 ) X $end
$scope module base $end
$var wire 1 , A $end
$var wire 1 % B $end
$var wire 1 ) X $end
$var wire 1 S) and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_1_0.select_inv_0 $end
$var wire 1 , A $end
$var wire 1 T) VGND $end
$var wire 1 U) VNB $end
$var wire 1 V) VPB $end
$var wire 1 W) VPWR $end
$var wire 1 * Y $end
$scope module base $end
$var wire 1 , A $end
$var wire 1 * Y $end
$var wire 1 X) not0_out_Y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0X)
1W)
1V)
0U)
0T)
1S)
1R)
1Q)
0P)
0O)
1N)
1M)
1L)
0K)
0J)
xI)
0H)
1G)
1F)
0E)
0D)
xC)
1B)
1A)
0@)
0?)
x>)
1=)
1<)
0;)
0:)
x9)
18)
17)
06)
05)
x4)
13)
12)
01)
00)
x/)
1.)
1-)
0,)
0+)
x*)
1))
1()
0')
0&)
x%)
1$)
1#)
0")
0!)
x~(
1}(
1|(
0{(
0z(
xy(
1x(
1w(
0v(
0u(
xt(
1s(
1r(
0q(
0p(
xo(
1n(
1m(
0l(
0k(
xj(
1i(
1h(
0g(
0f(
xe(
1d(
1c(
0b(
0a(
x`(
1_(
1^(
0](
0\(
x[(
1Z(
1Y(
0X(
0W(
xV(
1U(
1T(
0S(
0R(
zQ(
1P(
1O(
0N(
0M(
xL(
1K(
1J(
0I(
0H(
1G(
1F(
1E(
0D(
0C(
xB(
0A(
1@(
1?(
0>(
0=(
x<(
1;(
1:(
09(
08(
x7(
16(
15(
04(
03(
x2(
11(
10(
0/(
0.(
x-(
1,(
1+(
0*(
0)(
x((
1'(
1&(
0%(
0$(
x#(
1"(
1!(
0~'
0}'
x|'
1{'
1z'
0y'
0x'
xw'
1v'
1u'
0t'
0s'
xr'
1q'
1p'
0o'
0n'
xm'
1l'
1k'
0j'
0i'
xh'
1g'
1f'
0e'
0d'
xc'
1b'
1a'
0`'
0_'
x^'
1]'
1\'
0['
0Z'
xY'
1X'
1W'
0V'
0U'
xT'
1S'
1R'
0Q'
0P'
xO'
1N'
1M'
0L'
0K'
1J'
1I'
1H'
0G'
0F'
0E'
1D'
1C'
0B'
0A'
0@'
0?'
1>'
1='
0<'
0;'
0:'
09'
18'
17'
06'
05'
04'
03'
12'
11'
00'
0/'
0.'
0-'
1,'
1+'
0*'
0)'
0('
0''
1&'
1%'
0$'
0#'
0"'
0!'
1~&
1}&
0|&
0{&
0z&
0y&
1x&
1w&
0v&
0u&
0t&
1s&
1r&
0q&
0p&
1o&
1n&
0m&
0l&
1k&
1j&
0i&
0h&
1g&
1f&
0e&
0d&
1c&
1b&
0a&
0`&
1_&
1^&
0]&
0\&
1[&
1Z&
0Y&
0X&
1W&
1V&
0U&
0T&
1S&
1R&
0Q&
0P&
1O&
1N&
0M&
0L&
1K&
1J&
0I&
0H&
1G&
1F&
0E&
0D&
1C&
1B&
0A&
0@&
1?&
1>&
0=&
0<&
1;&
1:&
09&
08&
17&
16&
05&
04&
13&
12&
01&
00&
1/&
1.&
0-&
0,&
1+&
1*&
0)&
0(&
1'&
1&&
0%&
0$&
1#&
1"&
0!&
0~%
1}%
1|%
0{%
0z%
1y%
1x%
0w%
0v%
1u%
1t%
0s%
0r%
1q%
1p%
0o%
0n%
1m%
1l%
0k%
0j%
1i%
1h%
0g%
0f%
1e%
1d%
0c%
0b%
1a%
1`%
0_%
0^%
1]%
1\%
0[%
0Z%
1Y%
1X%
0W%
0V%
1U%
1T%
0S%
0R%
1Q%
1P%
0O%
0N%
1M%
1L%
0K%
0J%
1I%
1H%
0G%
0F%
1E%
1D%
0C%
0B%
1A%
1@%
0?%
0>%
1=%
1<%
0;%
0:%
19%
18%
07%
06%
15%
14%
03%
02%
11%
10%
0/%
0.%
1-%
1,%
0+%
0*%
1)%
1(%
0'%
0&%
1%%
1$%
0#%
0"%
1!%
1~$
0}$
0|$
1{$
1z$
0y$
0x$
1w$
1v$
0u$
0t$
1s$
1r$
0q$
0p$
1o$
1n$
0m$
0l$
1k$
1j$
0i$
0h$
1g$
1f$
0e$
0d$
1c$
1b$
0a$
0`$
1_$
1^$
0]$
0\$
1[$
1Z$
0Y$
0X$
1W$
1V$
0U$
0T$
1S$
1R$
0Q$
0P$
1O$
1N$
0M$
0L$
1K$
1J$
0I$
0H$
1G$
1F$
0E$
0D$
1C$
1B$
0A$
0@$
1?$
1>$
0=$
0<$
1;$
1:$
09$
08$
17$
16$
05$
04$
13$
12$
01$
00$
1/$
1.$
0-$
0,$
1+$
1*$
0)$
0($
1'$
1&$
0%$
0$$
1#$
1"$
0!$
0~#
1}#
1|#
0{#
0z#
1y#
1x#
0w#
0v#
1u#
1t#
0s#
0r#
1q#
1p#
0o#
0n#
1m#
1l#
0k#
0j#
1i#
1h#
0g#
0f#
1e#
1d#
0c#
0b#
1a#
1`#
0_#
0^#
1]#
1\#
0[#
0Z#
1Y#
1X#
0W#
0V#
1U#
1T#
0S#
0R#
1Q#
1P#
0O#
0N#
1M#
1L#
0K#
0J#
1I#
1H#
0G#
0F#
1E#
1D#
0C#
0B#
1A#
1@#
0?#
0>#
1=#
1<#
0;#
0:#
19#
18#
07#
06#
15#
14#
03#
02#
11#
10#
0/#
0.#
1-#
1,#
0+#
0*#
1)#
1(#
0'#
0&#
1%#
1$#
0##
0"#
1!#
1~"
0}"
0|"
1{"
1z"
0y"
0x"
1w"
1v"
0u"
0t"
1s"
1r"
0q"
0p"
1o"
1n"
0m"
0l"
1k"
1j"
0i"
0h"
1g"
1f"
0e"
0d"
1c"
1b"
0a"
0`"
1_"
1^"
0]"
0\"
1["
1Z"
0Y"
0X"
1W"
1V"
0U"
0T"
1S"
1R"
0Q"
0P"
1O"
1N"
0M"
0L"
1K"
1J"
0I"
0H"
1G"
1F"
0E"
0D"
1C"
1B"
0A"
0@"
1?"
1>"
0="
0<"
1;"
1:"
09"
08"
17"
16"
05"
04"
13"
12"
01"
00"
1/"
1."
0-"
0,"
1+"
1*"
0)"
0("
1'"
1&"
0%"
0$"
1#"
1""
0!"
0~
1}
1|
0{
0z
1y
1x
0w
0v
1u
1t
0s
0r
1q
1p
0o
0n
1m
1l
0k
0j
1i
1h
0g
0f
1e
1d
0c
0b
1a
1`
0_
0^
1]
1\
0[
0Z
1Y
1X
0W
0V
1U
1T
0S
0R
1Q
1P
0O
0N
1M
1L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
xA
x@
x?
x>
x=
x<
x;
x:
19
x8
z7
x6
x5
x4
x3
x2
x1
x0
x/
x.
1-
1,
x+
0*
1)
z(
bx '
b0 &
1%
0$
0#
b0 "
bx !
$end
#10
1I)
08
1A(
0+
1H)
09
0-
0G(
0N)
1$
#20
0[(
05
0e(
04
0o(
03
0y(
02
0%)
01
0/)
00
09)
0/
0C)
0.
0V(
0`(
0j(
0t(
0~(
0*)
04)
0>)
x8
0A(
1+
0H)
19
1-
1G(
1N)
0$
#30
08
1A(
0+
1H)
09
0-
0G(
0N)
1$
#40
15
1V(
zC)
z9)
z/)
z%)
zy(
zo(
ze(
z[(
1*
1X)
1I
x8
0A(
1+
0H)
06
0)
0,
1y&
19
1-
0L(
0S)
0J'
1t&
1G(
1N)
0%
1#
b1 "
b1 &
0$
#50
0B(
0I)
08
1A(
0+
1H)
09
0-
0G(
0N)
1$
#60
0C)
09)
0/)
0%)
0y(
0o(
0e(
1[(
0*
0X)
0A(
0H)
1,
19
1-
1J'
1G(
1N)
0#
0$
#70
1A(
1H)
09
0-
0G(
0N)
1$
#80
zC)
z9)
z/)
z%)
zy(
zo(
ze(
z[(
1*
1X)
0A(
0H)
0,
19
1-
0J'
1G(
1N)
1#
0$
