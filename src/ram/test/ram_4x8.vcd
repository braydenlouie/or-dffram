$date
	Tue Jul  8 00:22:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RAM4x8_tb $end
$var wire 8 ! Q [7:0] $end
$var reg 8 " D [7:0] $end
$var reg 2 # addr [1:0] $end
$var reg 1 $ clk $end
$var reg 1 % we $end
$scope module dut $end
$var wire 8 & D [7:0] $end
$var wire 8 ' Q [7:0] $end
$var wire 2 ( addr [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % we $end
$var wire 1 ) \storage_3_0.we0 $end
$var wire 1 * \storage_3_0.select0_b $end
$var wire 1 + \storage_3_0.gclock $end
$var wire 1 , \storage_3_0.decoder0 $end
$var wire 1 - \storage_3_0.clock_b $end
$var wire 1 . \storage_3_0.bit[7].storage $end
$var wire 1 / \storage_3_0.bit[6].storage $end
$var wire 1 0 \storage_3_0.bit[5].storage $end
$var wire 1 1 \storage_3_0.bit[4].storage $end
$var wire 1 2 \storage_3_0.bit[3].storage $end
$var wire 1 3 \storage_3_0.bit[2].storage $end
$var wire 1 4 \storage_3_0.bit[1].storage $end
$var wire 1 5 \storage_3_0.bit[0].storage $end
$var wire 1 6 \storage_2_0.we0 $end
$var wire 1 7 \storage_2_0.select0_b $end
$var wire 1 8 \storage_2_0.gclock $end
$var wire 1 9 \storage_2_0.decoder0 $end
$var wire 1 : \storage_2_0.clock_b $end
$var wire 1 ; \storage_2_0.bit[7].storage $end
$var wire 1 < \storage_2_0.bit[6].storage $end
$var wire 1 = \storage_2_0.bit[5].storage $end
$var wire 1 > \storage_2_0.bit[4].storage $end
$var wire 1 ? \storage_2_0.bit[3].storage $end
$var wire 1 @ \storage_2_0.bit[2].storage $end
$var wire 1 A \storage_2_0.bit[1].storage $end
$var wire 1 B \storage_2_0.bit[0].storage $end
$var wire 1 C \storage_1_0.we0 $end
$var wire 1 D \storage_1_0.select0_b $end
$var wire 1 E \storage_1_0.gclock $end
$var wire 1 F \storage_1_0.decoder0 $end
$var wire 1 G \storage_1_0.clock_b $end
$var wire 1 H \storage_1_0.bit[7].storage $end
$var wire 1 I \storage_1_0.bit[6].storage $end
$var wire 1 J \storage_1_0.bit[5].storage $end
$var wire 1 K \storage_1_0.bit[4].storage $end
$var wire 1 L \storage_1_0.bit[3].storage $end
$var wire 1 M \storage_1_0.bit[2].storage $end
$var wire 1 N \storage_1_0.bit[1].storage $end
$var wire 1 O \storage_1_0.bit[0].storage $end
$var wire 1 P \storage_0_0.we0 $end
$var wire 1 Q \storage_0_0.select0_b $end
$var wire 1 R \storage_0_0.gclock $end
$var wire 1 S \storage_0_0.decoder0 $end
$var wire 1 T \storage_0_0.clock_b $end
$var wire 1 U \storage_0_0.bit[7].storage $end
$var wire 1 V \storage_0_0.bit[6].storage $end
$var wire 1 W \storage_0_0.bit[5].storage $end
$var wire 1 X \storage_0_0.bit[4].storage $end
$var wire 1 Y \storage_0_0.bit[3].storage $end
$var wire 1 Z \storage_0_0.bit[2].storage $end
$var wire 1 [ \storage_0_0.bit[1].storage $end
$var wire 1 \ \storage_0_0.bit[0].storage $end
$var wire 1 ] \inv.addr1 $end
$var wire 1 ^ \inv.addr0 $end
$var wire 1 _ \Di_nets[7].net $end
$var wire 1 ` \Di_nets[6].net $end
$var wire 1 a \Di_nets[5].net $end
$var wire 1 b \Di_nets[4].net $end
$var wire 1 c \Di_nets[3].net $end
$var wire 1 d \Di_nets[2].net $end
$var wire 1 e \Di_nets[1].net $end
$var wire 1 f \Di_nets[0].net $end
$scope module buffer.bit[0]_filler0 $end
$var wire 1 g VGND $end
$var wire 1 h VNB $end
$var wire 1 i VPB $end
$var wire 1 j VPWR $end
$scope module base $end
$var wire 1 k VGND $end
$var wire 1 l VNB $end
$var wire 1 m VPB $end
$var wire 1 n VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler1 $end
$var wire 1 o VGND $end
$var wire 1 p VNB $end
$var wire 1 q VPB $end
$var wire 1 r VPWR $end
$scope module base $end
$var wire 1 s VGND $end
$var wire 1 t VNB $end
$var wire 1 u VPB $end
$var wire 1 v VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler2 $end
$var wire 1 w VGND $end
$var wire 1 x VNB $end
$var wire 1 y VPB $end
$var wire 1 z VPWR $end
$scope module base $end
$var wire 1 { VGND $end
$var wire 1 | VNB $end
$var wire 1 } VPB $end
$var wire 1 ~ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler3 $end
$var wire 1 !" VGND $end
$var wire 1 "" VNB $end
$var wire 1 #" VPB $end
$var wire 1 $" VPWR $end
$scope module base $end
$var wire 1 %" VGND $end
$var wire 1 &" VNB $end
$var wire 1 '" VPB $end
$var wire 1 (" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler4 $end
$var wire 1 )" VGND $end
$var wire 1 *" VNB $end
$var wire 1 +" VPB $end
$var wire 1 ," VPWR $end
$scope module base $end
$var wire 1 -" VGND $end
$var wire 1 ." VNB $end
$var wire 1 /" VPB $end
$var wire 1 0" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler5 $end
$var wire 1 1" VGND $end
$var wire 1 2" VNB $end
$var wire 1 3" VPB $end
$var wire 1 4" VPWR $end
$scope module base $end
$var wire 1 5" VGND $end
$var wire 1 6" VNB $end
$var wire 1 7" VPB $end
$var wire 1 8" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler6 $end
$var wire 1 9" VGND $end
$var wire 1 :" VNB $end
$var wire 1 ;" VPB $end
$var wire 1 <" VPWR $end
$scope module base $end
$var wire 1 =" VGND $end
$var wire 1 >" VNB $end
$var wire 1 ?" VPB $end
$var wire 1 @" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[0]_filler7 $end
$var wire 1 A" VGND $end
$var wire 1 B" VNB $end
$var wire 1 C" VPB $end
$var wire 1 D" VPWR $end
$scope module base $end
$var wire 1 E" VGND $end
$var wire 1 F" VNB $end
$var wire 1 G" VPB $end
$var wire 1 H" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler0 $end
$var wire 1 I" VGND $end
$var wire 1 J" VNB $end
$var wire 1 K" VPB $end
$var wire 1 L" VPWR $end
$scope module base $end
$var wire 1 M" VGND $end
$var wire 1 N" VNB $end
$var wire 1 O" VPB $end
$var wire 1 P" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler1 $end
$var wire 1 Q" VGND $end
$var wire 1 R" VNB $end
$var wire 1 S" VPB $end
$var wire 1 T" VPWR $end
$scope module base $end
$var wire 1 U" VGND $end
$var wire 1 V" VNB $end
$var wire 1 W" VPB $end
$var wire 1 X" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler2 $end
$var wire 1 Y" VGND $end
$var wire 1 Z" VNB $end
$var wire 1 [" VPB $end
$var wire 1 \" VPWR $end
$scope module base $end
$var wire 1 ]" VGND $end
$var wire 1 ^" VNB $end
$var wire 1 _" VPB $end
$var wire 1 `" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler3 $end
$var wire 1 a" VGND $end
$var wire 1 b" VNB $end
$var wire 1 c" VPB $end
$var wire 1 d" VPWR $end
$scope module base $end
$var wire 1 e" VGND $end
$var wire 1 f" VNB $end
$var wire 1 g" VPB $end
$var wire 1 h" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler4 $end
$var wire 1 i" VGND $end
$var wire 1 j" VNB $end
$var wire 1 k" VPB $end
$var wire 1 l" VPWR $end
$scope module base $end
$var wire 1 m" VGND $end
$var wire 1 n" VNB $end
$var wire 1 o" VPB $end
$var wire 1 p" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler5 $end
$var wire 1 q" VGND $end
$var wire 1 r" VNB $end
$var wire 1 s" VPB $end
$var wire 1 t" VPWR $end
$scope module base $end
$var wire 1 u" VGND $end
$var wire 1 v" VNB $end
$var wire 1 w" VPB $end
$var wire 1 x" VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler6 $end
$var wire 1 y" VGND $end
$var wire 1 z" VNB $end
$var wire 1 {" VPB $end
$var wire 1 |" VPWR $end
$scope module base $end
$var wire 1 }" VGND $end
$var wire 1 ~" VNB $end
$var wire 1 !# VPB $end
$var wire 1 "# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[1]_filler7 $end
$var wire 1 ## VGND $end
$var wire 1 $# VNB $end
$var wire 1 %# VPB $end
$var wire 1 &# VPWR $end
$scope module base $end
$var wire 1 '# VGND $end
$var wire 1 (# VNB $end
$var wire 1 )# VPB $end
$var wire 1 *# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler0 $end
$var wire 1 +# VGND $end
$var wire 1 ,# VNB $end
$var wire 1 -# VPB $end
$var wire 1 .# VPWR $end
$scope module base $end
$var wire 1 /# VGND $end
$var wire 1 0# VNB $end
$var wire 1 1# VPB $end
$var wire 1 2# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler1 $end
$var wire 1 3# VGND $end
$var wire 1 4# VNB $end
$var wire 1 5# VPB $end
$var wire 1 6# VPWR $end
$scope module base $end
$var wire 1 7# VGND $end
$var wire 1 8# VNB $end
$var wire 1 9# VPB $end
$var wire 1 :# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler2 $end
$var wire 1 ;# VGND $end
$var wire 1 <# VNB $end
$var wire 1 =# VPB $end
$var wire 1 ># VPWR $end
$scope module base $end
$var wire 1 ?# VGND $end
$var wire 1 @# VNB $end
$var wire 1 A# VPB $end
$var wire 1 B# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler3 $end
$var wire 1 C# VGND $end
$var wire 1 D# VNB $end
$var wire 1 E# VPB $end
$var wire 1 F# VPWR $end
$scope module base $end
$var wire 1 G# VGND $end
$var wire 1 H# VNB $end
$var wire 1 I# VPB $end
$var wire 1 J# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler4 $end
$var wire 1 K# VGND $end
$var wire 1 L# VNB $end
$var wire 1 M# VPB $end
$var wire 1 N# VPWR $end
$scope module base $end
$var wire 1 O# VGND $end
$var wire 1 P# VNB $end
$var wire 1 Q# VPB $end
$var wire 1 R# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler5 $end
$var wire 1 S# VGND $end
$var wire 1 T# VNB $end
$var wire 1 U# VPB $end
$var wire 1 V# VPWR $end
$scope module base $end
$var wire 1 W# VGND $end
$var wire 1 X# VNB $end
$var wire 1 Y# VPB $end
$var wire 1 Z# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler6 $end
$var wire 1 [# VGND $end
$var wire 1 \# VNB $end
$var wire 1 ]# VPB $end
$var wire 1 ^# VPWR $end
$scope module base $end
$var wire 1 _# VGND $end
$var wire 1 `# VNB $end
$var wire 1 a# VPB $end
$var wire 1 b# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[2]_filler7 $end
$var wire 1 c# VGND $end
$var wire 1 d# VNB $end
$var wire 1 e# VPB $end
$var wire 1 f# VPWR $end
$scope module base $end
$var wire 1 g# VGND $end
$var wire 1 h# VNB $end
$var wire 1 i# VPB $end
$var wire 1 j# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler0 $end
$var wire 1 k# VGND $end
$var wire 1 l# VNB $end
$var wire 1 m# VPB $end
$var wire 1 n# VPWR $end
$scope module base $end
$var wire 1 o# VGND $end
$var wire 1 p# VNB $end
$var wire 1 q# VPB $end
$var wire 1 r# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler1 $end
$var wire 1 s# VGND $end
$var wire 1 t# VNB $end
$var wire 1 u# VPB $end
$var wire 1 v# VPWR $end
$scope module base $end
$var wire 1 w# VGND $end
$var wire 1 x# VNB $end
$var wire 1 y# VPB $end
$var wire 1 z# VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler2 $end
$var wire 1 {# VGND $end
$var wire 1 |# VNB $end
$var wire 1 }# VPB $end
$var wire 1 ~# VPWR $end
$scope module base $end
$var wire 1 !$ VGND $end
$var wire 1 "$ VNB $end
$var wire 1 #$ VPB $end
$var wire 1 $$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler3 $end
$var wire 1 %$ VGND $end
$var wire 1 &$ VNB $end
$var wire 1 '$ VPB $end
$var wire 1 ($ VPWR $end
$scope module base $end
$var wire 1 )$ VGND $end
$var wire 1 *$ VNB $end
$var wire 1 +$ VPB $end
$var wire 1 ,$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler4 $end
$var wire 1 -$ VGND $end
$var wire 1 .$ VNB $end
$var wire 1 /$ VPB $end
$var wire 1 0$ VPWR $end
$scope module base $end
$var wire 1 1$ VGND $end
$var wire 1 2$ VNB $end
$var wire 1 3$ VPB $end
$var wire 1 4$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler5 $end
$var wire 1 5$ VGND $end
$var wire 1 6$ VNB $end
$var wire 1 7$ VPB $end
$var wire 1 8$ VPWR $end
$scope module base $end
$var wire 1 9$ VGND $end
$var wire 1 :$ VNB $end
$var wire 1 ;$ VPB $end
$var wire 1 <$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler6 $end
$var wire 1 =$ VGND $end
$var wire 1 >$ VNB $end
$var wire 1 ?$ VPB $end
$var wire 1 @$ VPWR $end
$scope module base $end
$var wire 1 A$ VGND $end
$var wire 1 B$ VNB $end
$var wire 1 C$ VPB $end
$var wire 1 D$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[3]_filler7 $end
$var wire 1 E$ VGND $end
$var wire 1 F$ VNB $end
$var wire 1 G$ VPB $end
$var wire 1 H$ VPWR $end
$scope module base $end
$var wire 1 I$ VGND $end
$var wire 1 J$ VNB $end
$var wire 1 K$ VPB $end
$var wire 1 L$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler0 $end
$var wire 1 M$ VGND $end
$var wire 1 N$ VNB $end
$var wire 1 O$ VPB $end
$var wire 1 P$ VPWR $end
$scope module base $end
$var wire 1 Q$ VGND $end
$var wire 1 R$ VNB $end
$var wire 1 S$ VPB $end
$var wire 1 T$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler1 $end
$var wire 1 U$ VGND $end
$var wire 1 V$ VNB $end
$var wire 1 W$ VPB $end
$var wire 1 X$ VPWR $end
$scope module base $end
$var wire 1 Y$ VGND $end
$var wire 1 Z$ VNB $end
$var wire 1 [$ VPB $end
$var wire 1 \$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler2 $end
$var wire 1 ]$ VGND $end
$var wire 1 ^$ VNB $end
$var wire 1 _$ VPB $end
$var wire 1 `$ VPWR $end
$scope module base $end
$var wire 1 a$ VGND $end
$var wire 1 b$ VNB $end
$var wire 1 c$ VPB $end
$var wire 1 d$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler3 $end
$var wire 1 e$ VGND $end
$var wire 1 f$ VNB $end
$var wire 1 g$ VPB $end
$var wire 1 h$ VPWR $end
$scope module base $end
$var wire 1 i$ VGND $end
$var wire 1 j$ VNB $end
$var wire 1 k$ VPB $end
$var wire 1 l$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler4 $end
$var wire 1 m$ VGND $end
$var wire 1 n$ VNB $end
$var wire 1 o$ VPB $end
$var wire 1 p$ VPWR $end
$scope module base $end
$var wire 1 q$ VGND $end
$var wire 1 r$ VNB $end
$var wire 1 s$ VPB $end
$var wire 1 t$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler5 $end
$var wire 1 u$ VGND $end
$var wire 1 v$ VNB $end
$var wire 1 w$ VPB $end
$var wire 1 x$ VPWR $end
$scope module base $end
$var wire 1 y$ VGND $end
$var wire 1 z$ VNB $end
$var wire 1 {$ VPB $end
$var wire 1 |$ VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler6 $end
$var wire 1 }$ VGND $end
$var wire 1 ~$ VNB $end
$var wire 1 !% VPB $end
$var wire 1 "% VPWR $end
$scope module base $end
$var wire 1 #% VGND $end
$var wire 1 $% VNB $end
$var wire 1 %% VPB $end
$var wire 1 &% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[4]_filler7 $end
$var wire 1 '% VGND $end
$var wire 1 (% VNB $end
$var wire 1 )% VPB $end
$var wire 1 *% VPWR $end
$scope module base $end
$var wire 1 +% VGND $end
$var wire 1 ,% VNB $end
$var wire 1 -% VPB $end
$var wire 1 .% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler0 $end
$var wire 1 /% VGND $end
$var wire 1 0% VNB $end
$var wire 1 1% VPB $end
$var wire 1 2% VPWR $end
$scope module base $end
$var wire 1 3% VGND $end
$var wire 1 4% VNB $end
$var wire 1 5% VPB $end
$var wire 1 6% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler1 $end
$var wire 1 7% VGND $end
$var wire 1 8% VNB $end
$var wire 1 9% VPB $end
$var wire 1 :% VPWR $end
$scope module base $end
$var wire 1 ;% VGND $end
$var wire 1 <% VNB $end
$var wire 1 =% VPB $end
$var wire 1 >% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler2 $end
$var wire 1 ?% VGND $end
$var wire 1 @% VNB $end
$var wire 1 A% VPB $end
$var wire 1 B% VPWR $end
$scope module base $end
$var wire 1 C% VGND $end
$var wire 1 D% VNB $end
$var wire 1 E% VPB $end
$var wire 1 F% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler3 $end
$var wire 1 G% VGND $end
$var wire 1 H% VNB $end
$var wire 1 I% VPB $end
$var wire 1 J% VPWR $end
$scope module base $end
$var wire 1 K% VGND $end
$var wire 1 L% VNB $end
$var wire 1 M% VPB $end
$var wire 1 N% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler4 $end
$var wire 1 O% VGND $end
$var wire 1 P% VNB $end
$var wire 1 Q% VPB $end
$var wire 1 R% VPWR $end
$scope module base $end
$var wire 1 S% VGND $end
$var wire 1 T% VNB $end
$var wire 1 U% VPB $end
$var wire 1 V% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler5 $end
$var wire 1 W% VGND $end
$var wire 1 X% VNB $end
$var wire 1 Y% VPB $end
$var wire 1 Z% VPWR $end
$scope module base $end
$var wire 1 [% VGND $end
$var wire 1 \% VNB $end
$var wire 1 ]% VPB $end
$var wire 1 ^% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler6 $end
$var wire 1 _% VGND $end
$var wire 1 `% VNB $end
$var wire 1 a% VPB $end
$var wire 1 b% VPWR $end
$scope module base $end
$var wire 1 c% VGND $end
$var wire 1 d% VNB $end
$var wire 1 e% VPB $end
$var wire 1 f% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[5]_filler7 $end
$var wire 1 g% VGND $end
$var wire 1 h% VNB $end
$var wire 1 i% VPB $end
$var wire 1 j% VPWR $end
$scope module base $end
$var wire 1 k% VGND $end
$var wire 1 l% VNB $end
$var wire 1 m% VPB $end
$var wire 1 n% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler0 $end
$var wire 1 o% VGND $end
$var wire 1 p% VNB $end
$var wire 1 q% VPB $end
$var wire 1 r% VPWR $end
$scope module base $end
$var wire 1 s% VGND $end
$var wire 1 t% VNB $end
$var wire 1 u% VPB $end
$var wire 1 v% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler1 $end
$var wire 1 w% VGND $end
$var wire 1 x% VNB $end
$var wire 1 y% VPB $end
$var wire 1 z% VPWR $end
$scope module base $end
$var wire 1 {% VGND $end
$var wire 1 |% VNB $end
$var wire 1 }% VPB $end
$var wire 1 ~% VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler2 $end
$var wire 1 !& VGND $end
$var wire 1 "& VNB $end
$var wire 1 #& VPB $end
$var wire 1 $& VPWR $end
$scope module base $end
$var wire 1 %& VGND $end
$var wire 1 && VNB $end
$var wire 1 '& VPB $end
$var wire 1 (& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler3 $end
$var wire 1 )& VGND $end
$var wire 1 *& VNB $end
$var wire 1 +& VPB $end
$var wire 1 ,& VPWR $end
$scope module base $end
$var wire 1 -& VGND $end
$var wire 1 .& VNB $end
$var wire 1 /& VPB $end
$var wire 1 0& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler4 $end
$var wire 1 1& VGND $end
$var wire 1 2& VNB $end
$var wire 1 3& VPB $end
$var wire 1 4& VPWR $end
$scope module base $end
$var wire 1 5& VGND $end
$var wire 1 6& VNB $end
$var wire 1 7& VPB $end
$var wire 1 8& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler5 $end
$var wire 1 9& VGND $end
$var wire 1 :& VNB $end
$var wire 1 ;& VPB $end
$var wire 1 <& VPWR $end
$scope module base $end
$var wire 1 =& VGND $end
$var wire 1 >& VNB $end
$var wire 1 ?& VPB $end
$var wire 1 @& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler6 $end
$var wire 1 A& VGND $end
$var wire 1 B& VNB $end
$var wire 1 C& VPB $end
$var wire 1 D& VPWR $end
$scope module base $end
$var wire 1 E& VGND $end
$var wire 1 F& VNB $end
$var wire 1 G& VPB $end
$var wire 1 H& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[6]_filler7 $end
$var wire 1 I& VGND $end
$var wire 1 J& VNB $end
$var wire 1 K& VPB $end
$var wire 1 L& VPWR $end
$scope module base $end
$var wire 1 M& VGND $end
$var wire 1 N& VNB $end
$var wire 1 O& VPB $end
$var wire 1 P& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler0 $end
$var wire 1 Q& VGND $end
$var wire 1 R& VNB $end
$var wire 1 S& VPB $end
$var wire 1 T& VPWR $end
$scope module base $end
$var wire 1 U& VGND $end
$var wire 1 V& VNB $end
$var wire 1 W& VPB $end
$var wire 1 X& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler1 $end
$var wire 1 Y& VGND $end
$var wire 1 Z& VNB $end
$var wire 1 [& VPB $end
$var wire 1 \& VPWR $end
$scope module base $end
$var wire 1 ]& VGND $end
$var wire 1 ^& VNB $end
$var wire 1 _& VPB $end
$var wire 1 `& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler2 $end
$var wire 1 a& VGND $end
$var wire 1 b& VNB $end
$var wire 1 c& VPB $end
$var wire 1 d& VPWR $end
$scope module base $end
$var wire 1 e& VGND $end
$var wire 1 f& VNB $end
$var wire 1 g& VPB $end
$var wire 1 h& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler3 $end
$var wire 1 i& VGND $end
$var wire 1 j& VNB $end
$var wire 1 k& VPB $end
$var wire 1 l& VPWR $end
$scope module base $end
$var wire 1 m& VGND $end
$var wire 1 n& VNB $end
$var wire 1 o& VPB $end
$var wire 1 p& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler4 $end
$var wire 1 q& VGND $end
$var wire 1 r& VNB $end
$var wire 1 s& VPB $end
$var wire 1 t& VPWR $end
$scope module base $end
$var wire 1 u& VGND $end
$var wire 1 v& VNB $end
$var wire 1 w& VPB $end
$var wire 1 x& VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler5 $end
$var wire 1 y& VGND $end
$var wire 1 z& VNB $end
$var wire 1 {& VPB $end
$var wire 1 |& VPWR $end
$scope module base $end
$var wire 1 }& VGND $end
$var wire 1 ~& VNB $end
$var wire 1 !' VPB $end
$var wire 1 "' VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler6 $end
$var wire 1 #' VGND $end
$var wire 1 $' VNB $end
$var wire 1 %' VPB $end
$var wire 1 &' VPWR $end
$scope module base $end
$var wire 1 '' VGND $end
$var wire 1 (' VNB $end
$var wire 1 )' VPB $end
$var wire 1 *' VPWR $end
$upscope $end
$upscope $end
$scope module buffer.bit[7]_filler7 $end
$var wire 1 +' VGND $end
$var wire 1 ,' VNB $end
$var wire 1 -' VPB $end
$var wire 1 .' VPWR $end
$scope module base $end
$var wire 1 /' VGND $end
$var wire 1 0' VNB $end
$var wire 1 1' VPB $end
$var wire 1 2' VPWR $end
$upscope $end
$upscope $end
$scope module buffer.in[0] $end
$var wire 1 3' A $end
$var wire 1 4' VGND $end
$var wire 1 5' VNB $end
$var wire 1 6' VPB $end
$var wire 1 7' VPWR $end
$var wire 1 f X $end
$scope module base $end
$var wire 1 3' A $end
$var wire 1 f X $end
$var wire 1 8' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[1] $end
$var wire 1 9' A $end
$var wire 1 :' VGND $end
$var wire 1 ;' VNB $end
$var wire 1 <' VPB $end
$var wire 1 =' VPWR $end
$var wire 1 e X $end
$scope module base $end
$var wire 1 9' A $end
$var wire 1 e X $end
$var wire 1 >' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[2] $end
$var wire 1 ?' A $end
$var wire 1 @' VGND $end
$var wire 1 A' VNB $end
$var wire 1 B' VPB $end
$var wire 1 C' VPWR $end
$var wire 1 d X $end
$scope module base $end
$var wire 1 ?' A $end
$var wire 1 d X $end
$var wire 1 D' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[3] $end
$var wire 1 E' A $end
$var wire 1 F' VGND $end
$var wire 1 G' VNB $end
$var wire 1 H' VPB $end
$var wire 1 I' VPWR $end
$var wire 1 c X $end
$scope module base $end
$var wire 1 E' A $end
$var wire 1 c X $end
$var wire 1 J' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[4] $end
$var wire 1 K' A $end
$var wire 1 L' VGND $end
$var wire 1 M' VNB $end
$var wire 1 N' VPB $end
$var wire 1 O' VPWR $end
$var wire 1 b X $end
$scope module base $end
$var wire 1 K' A $end
$var wire 1 b X $end
$var wire 1 P' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[5] $end
$var wire 1 Q' A $end
$var wire 1 R' VGND $end
$var wire 1 S' VNB $end
$var wire 1 T' VPB $end
$var wire 1 U' VPWR $end
$var wire 1 a X $end
$scope module base $end
$var wire 1 Q' A $end
$var wire 1 a X $end
$var wire 1 V' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[6] $end
$var wire 1 W' A $end
$var wire 1 X' VGND $end
$var wire 1 Y' VNB $end
$var wire 1 Z' VPB $end
$var wire 1 [' VPWR $end
$var wire 1 ` X $end
$scope module base $end
$var wire 1 W' A $end
$var wire 1 ` X $end
$var wire 1 \' buf0_out_X $end
$upscope $end
$upscope $end
$scope module buffer.in[7] $end
$var wire 1 ]' A $end
$var wire 1 ^' VGND $end
$var wire 1 _' VNB $end
$var wire 1 `' VPB $end
$var wire 1 a' VPWR $end
$var wire 1 _ X $end
$scope module base $end
$var wire 1 ]' A $end
$var wire 1 _ X $end
$var wire 1 b' buf0_out_X $end
$upscope $end
$upscope $end
$scope module decoder.filler_1_0 $end
$var wire 1 c' VGND $end
$var wire 1 d' VNB $end
$var wire 1 e' VPB $end
$var wire 1 f' VPWR $end
$scope module base $end
$var wire 1 g' VGND $end
$var wire 1 h' VNB $end
$var wire 1 i' VPB $end
$var wire 1 j' VPWR $end
$upscope $end
$upscope $end
$scope module decoder.inv_0 $end
$var wire 1 k' A $end
$var wire 1 l' VGND $end
$var wire 1 m' VNB $end
$var wire 1 n' VPB $end
$var wire 1 o' VPWR $end
$var wire 1 ^ Y $end
$scope module base $end
$var wire 1 k' A $end
$var wire 1 ^ Y $end
$var wire 1 p' not0_out_Y $end
$upscope $end
$upscope $end
$scope module decoder.inv_1 $end
$var wire 1 q' A $end
$var wire 1 r' VGND $end
$var wire 1 s' VNB $end
$var wire 1 t' VPB $end
$var wire 1 u' VPWR $end
$var wire 1 ] Y $end
$scope module base $end
$var wire 1 q' A $end
$var wire 1 ] Y $end
$var wire 1 v' not0_out_Y $end
$upscope $end
$upscope $end
$scope module decoder0.nand_layer0 $end
$var wire 1 w' A $end
$var wire 1 x' B $end
$var wire 1 y' VGND $end
$var wire 1 z' VNB $end
$var wire 1 {' VPB $end
$var wire 1 |' VPWR $end
$var wire 1 S Y $end
$scope module base $end
$var wire 1 w' A $end
$var wire 1 x' B $end
$var wire 1 S Y $end
$var wire 1 }' nand0_out_Y $end
$upscope $end
$upscope $end
$scope module decoder1.nand_layer0 $end
$var wire 1 ~' A $end
$var wire 1 ] B $end
$var wire 1 !( VGND $end
$var wire 1 "( VNB $end
$var wire 1 #( VPB $end
$var wire 1 $( VPWR $end
$var wire 1 F Y $end
$scope module base $end
$var wire 1 ~' A $end
$var wire 1 ] B $end
$var wire 1 F Y $end
$var wire 1 %( nand0_out_Y $end
$upscope $end
$upscope $end
$scope module decoder2.nand_layer0 $end
$var wire 1 ^ A $end
$var wire 1 &( B $end
$var wire 1 '( VGND $end
$var wire 1 (( VNB $end
$var wire 1 )( VPB $end
$var wire 1 *( VPWR $end
$var wire 1 9 Y $end
$scope module base $end
$var wire 1 ^ A $end
$var wire 1 &( B $end
$var wire 1 9 Y $end
$var wire 1 +( nand0_out_Y $end
$upscope $end
$upscope $end
$scope module decoder3.nand_layer0 $end
$var wire 1 ^ A $end
$var wire 1 ] B $end
$var wire 1 ,( VGND $end
$var wire 1 -( VNB $end
$var wire 1 .( VPB $end
$var wire 1 /( VPWR $end
$var wire 1 , Y $end
$scope module base $end
$var wire 1 ^ A $end
$var wire 1 ] B $end
$var wire 1 , Y $end
$var wire 1 0( nand0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[0].bit $end
$var wire 1 f D $end
$var wire 1 1( VGND $end
$var wire 1 2( VNB $end
$var wire 1 3( VPB $end
$var wire 1 4( VPWR $end
$var wire 1 \ Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 f D $end
$var wire 1 \ Q $end
$var wire 1 5( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 f D $end
$var wire 1 R GATE $end
$var reg 1 5( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[0].obuf0 $end
$var wire 1 \ A $end
$var wire 1 6( VGND $end
$var wire 1 7( VNB $end
$var wire 1 8( VPB $end
$var wire 1 9( VPWR $end
$var wire 1 :( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 \ A $end
$var wire 1 :( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[1].bit $end
$var wire 1 e D $end
$var wire 1 ;( VGND $end
$var wire 1 <( VNB $end
$var wire 1 =( VPB $end
$var wire 1 >( VPWR $end
$var wire 1 [ Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 e D $end
$var wire 1 [ Q $end
$var wire 1 ?( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 e D $end
$var wire 1 R GATE $end
$var reg 1 ?( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[1].obuf0 $end
$var wire 1 [ A $end
$var wire 1 @( VGND $end
$var wire 1 A( VNB $end
$var wire 1 B( VPB $end
$var wire 1 C( VPWR $end
$var wire 1 D( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 [ A $end
$var wire 1 D( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[2].bit $end
$var wire 1 d D $end
$var wire 1 E( VGND $end
$var wire 1 F( VNB $end
$var wire 1 G( VPB $end
$var wire 1 H( VPWR $end
$var wire 1 Z Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 d D $end
$var wire 1 Z Q $end
$var wire 1 I( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 d D $end
$var wire 1 R GATE $end
$var reg 1 I( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[2].obuf0 $end
$var wire 1 Z A $end
$var wire 1 J( VGND $end
$var wire 1 K( VNB $end
$var wire 1 L( VPB $end
$var wire 1 M( VPWR $end
$var wire 1 N( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 Z A $end
$var wire 1 N( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[3].bit $end
$var wire 1 c D $end
$var wire 1 O( VGND $end
$var wire 1 P( VNB $end
$var wire 1 Q( VPB $end
$var wire 1 R( VPWR $end
$var wire 1 Y Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 c D $end
$var wire 1 Y Q $end
$var wire 1 S( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 c D $end
$var wire 1 R GATE $end
$var reg 1 S( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[3].obuf0 $end
$var wire 1 Y A $end
$var wire 1 T( VGND $end
$var wire 1 U( VNB $end
$var wire 1 V( VPB $end
$var wire 1 W( VPWR $end
$var wire 1 X( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 Y A $end
$var wire 1 X( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[4].bit $end
$var wire 1 b D $end
$var wire 1 Y( VGND $end
$var wire 1 Z( VNB $end
$var wire 1 [( VPB $end
$var wire 1 \( VPWR $end
$var wire 1 X Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 b D $end
$var wire 1 X Q $end
$var wire 1 ]( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 b D $end
$var wire 1 R GATE $end
$var reg 1 ]( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[4].obuf0 $end
$var wire 1 X A $end
$var wire 1 ^( VGND $end
$var wire 1 _( VNB $end
$var wire 1 `( VPB $end
$var wire 1 a( VPWR $end
$var wire 1 b( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 X A $end
$var wire 1 b( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[5].bit $end
$var wire 1 a D $end
$var wire 1 c( VGND $end
$var wire 1 d( VNB $end
$var wire 1 e( VPB $end
$var wire 1 f( VPWR $end
$var wire 1 W Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 a D $end
$var wire 1 W Q $end
$var wire 1 g( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 a D $end
$var wire 1 R GATE $end
$var reg 1 g( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[5].obuf0 $end
$var wire 1 W A $end
$var wire 1 h( VGND $end
$var wire 1 i( VNB $end
$var wire 1 j( VPB $end
$var wire 1 k( VPWR $end
$var wire 1 l( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 W A $end
$var wire 1 l( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[6].bit $end
$var wire 1 ` D $end
$var wire 1 m( VGND $end
$var wire 1 n( VNB $end
$var wire 1 o( VPB $end
$var wire 1 p( VPWR $end
$var wire 1 V Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 ` D $end
$var wire 1 V Q $end
$var wire 1 q( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 ` D $end
$var wire 1 R GATE $end
$var reg 1 q( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[6].obuf0 $end
$var wire 1 V A $end
$var wire 1 r( VGND $end
$var wire 1 s( VNB $end
$var wire 1 t( VPB $end
$var wire 1 u( VPWR $end
$var wire 1 v( Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 V A $end
$var wire 1 v( Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[7].bit $end
$var wire 1 _ D $end
$var wire 1 w( VGND $end
$var wire 1 x( VNB $end
$var wire 1 y( VPB $end
$var wire 1 z( VPWR $end
$var wire 1 U Q $end
$var wire 1 R GATE $end
$scope module base $end
$var wire 1 _ D $end
$var wire 1 U Q $end
$var wire 1 {( buf_Q $end
$var wire 1 R GATE $end
$scope module dlatch0 $end
$var wire 1 _ D $end
$var wire 1 R GATE $end
$var reg 1 {( Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.bit[7].obuf0 $end
$var wire 1 U A $end
$var wire 1 |( VGND $end
$var wire 1 }( VNB $end
$var wire 1 ~( VPB $end
$var wire 1 !) VPWR $end
$var wire 1 ") Z $end
$var wire 1 Q TE_B $end
$scope module base $end
$var wire 1 U A $end
$var wire 1 ") Z $end
$var wire 1 Q TE_B $end
$upscope $end
$upscope $end
$scope module storage_0_0.cg $end
$var wire 1 #) VGND $end
$var wire 1 $) VNB $end
$var wire 1 %) VPB $end
$var wire 1 &) VPWR $end
$var wire 1 R GCLK $end
$var wire 1 P GATE $end
$var wire 1 T CLK $end
$scope module base $end
$var wire 1 R GCLK $end
$var wire 1 ') clkn $end
$var wire 1 () m0 $end
$var wire 1 P GATE $end
$var wire 1 T CLK $end
$scope module dlatch0 $end
$var wire 1 ') GATE $end
$var wire 1 P D $end
$var reg 1 () Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_0_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 )) VGND $end
$var wire 1 *) VNB $end
$var wire 1 +) VPB $end
$var wire 1 ,) VPWR $end
$var wire 1 T Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 T Y $end
$var wire 1 -) not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_0_0.gcand $end
$var wire 1 S A $end
$var wire 1 % B $end
$var wire 1 .) VGND $end
$var wire 1 /) VNB $end
$var wire 1 0) VPB $end
$var wire 1 1) VPWR $end
$var wire 1 P X $end
$scope module base $end
$var wire 1 S A $end
$var wire 1 % B $end
$var wire 1 P X $end
$var wire 1 2) and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_0_0.select_inv_0 $end
$var wire 1 S A $end
$var wire 1 3) VGND $end
$var wire 1 4) VNB $end
$var wire 1 5) VPB $end
$var wire 1 6) VPWR $end
$var wire 1 Q Y $end
$scope module base $end
$var wire 1 S A $end
$var wire 1 Q Y $end
$var wire 1 7) not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[0].bit $end
$var wire 1 f D $end
$var wire 1 8) VGND $end
$var wire 1 9) VNB $end
$var wire 1 :) VPB $end
$var wire 1 ;) VPWR $end
$var wire 1 O Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 f D $end
$var wire 1 O Q $end
$var wire 1 <) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 f D $end
$var wire 1 E GATE $end
$var reg 1 <) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[0].obuf0 $end
$var wire 1 O A $end
$var wire 1 =) VGND $end
$var wire 1 >) VNB $end
$var wire 1 ?) VPB $end
$var wire 1 @) VPWR $end
$var wire 1 A) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 O A $end
$var wire 1 A) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[1].bit $end
$var wire 1 e D $end
$var wire 1 B) VGND $end
$var wire 1 C) VNB $end
$var wire 1 D) VPB $end
$var wire 1 E) VPWR $end
$var wire 1 N Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 e D $end
$var wire 1 N Q $end
$var wire 1 F) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 e D $end
$var wire 1 E GATE $end
$var reg 1 F) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[1].obuf0 $end
$var wire 1 N A $end
$var wire 1 G) VGND $end
$var wire 1 H) VNB $end
$var wire 1 I) VPB $end
$var wire 1 J) VPWR $end
$var wire 1 K) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 N A $end
$var wire 1 K) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[2].bit $end
$var wire 1 d D $end
$var wire 1 L) VGND $end
$var wire 1 M) VNB $end
$var wire 1 N) VPB $end
$var wire 1 O) VPWR $end
$var wire 1 M Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 d D $end
$var wire 1 M Q $end
$var wire 1 P) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 d D $end
$var wire 1 E GATE $end
$var reg 1 P) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[2].obuf0 $end
$var wire 1 M A $end
$var wire 1 Q) VGND $end
$var wire 1 R) VNB $end
$var wire 1 S) VPB $end
$var wire 1 T) VPWR $end
$var wire 1 U) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 M A $end
$var wire 1 U) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[3].bit $end
$var wire 1 c D $end
$var wire 1 V) VGND $end
$var wire 1 W) VNB $end
$var wire 1 X) VPB $end
$var wire 1 Y) VPWR $end
$var wire 1 L Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 c D $end
$var wire 1 L Q $end
$var wire 1 Z) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 c D $end
$var wire 1 E GATE $end
$var reg 1 Z) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[3].obuf0 $end
$var wire 1 L A $end
$var wire 1 [) VGND $end
$var wire 1 \) VNB $end
$var wire 1 ]) VPB $end
$var wire 1 ^) VPWR $end
$var wire 1 _) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 L A $end
$var wire 1 _) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[4].bit $end
$var wire 1 b D $end
$var wire 1 `) VGND $end
$var wire 1 a) VNB $end
$var wire 1 b) VPB $end
$var wire 1 c) VPWR $end
$var wire 1 K Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 b D $end
$var wire 1 K Q $end
$var wire 1 d) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 b D $end
$var wire 1 E GATE $end
$var reg 1 d) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[4].obuf0 $end
$var wire 1 K A $end
$var wire 1 e) VGND $end
$var wire 1 f) VNB $end
$var wire 1 g) VPB $end
$var wire 1 h) VPWR $end
$var wire 1 i) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 K A $end
$var wire 1 i) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[5].bit $end
$var wire 1 a D $end
$var wire 1 j) VGND $end
$var wire 1 k) VNB $end
$var wire 1 l) VPB $end
$var wire 1 m) VPWR $end
$var wire 1 J Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 a D $end
$var wire 1 J Q $end
$var wire 1 n) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 a D $end
$var wire 1 E GATE $end
$var reg 1 n) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[5].obuf0 $end
$var wire 1 J A $end
$var wire 1 o) VGND $end
$var wire 1 p) VNB $end
$var wire 1 q) VPB $end
$var wire 1 r) VPWR $end
$var wire 1 s) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 J A $end
$var wire 1 s) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[6].bit $end
$var wire 1 ` D $end
$var wire 1 t) VGND $end
$var wire 1 u) VNB $end
$var wire 1 v) VPB $end
$var wire 1 w) VPWR $end
$var wire 1 I Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 ` D $end
$var wire 1 I Q $end
$var wire 1 x) buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 ` D $end
$var wire 1 E GATE $end
$var reg 1 x) Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[6].obuf0 $end
$var wire 1 I A $end
$var wire 1 y) VGND $end
$var wire 1 z) VNB $end
$var wire 1 {) VPB $end
$var wire 1 |) VPWR $end
$var wire 1 }) Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 I A $end
$var wire 1 }) Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[7].bit $end
$var wire 1 _ D $end
$var wire 1 ~) VGND $end
$var wire 1 !* VNB $end
$var wire 1 "* VPB $end
$var wire 1 #* VPWR $end
$var wire 1 H Q $end
$var wire 1 E GATE $end
$scope module base $end
$var wire 1 _ D $end
$var wire 1 H Q $end
$var wire 1 $* buf_Q $end
$var wire 1 E GATE $end
$scope module dlatch0 $end
$var wire 1 _ D $end
$var wire 1 E GATE $end
$var reg 1 $* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.bit[7].obuf0 $end
$var wire 1 H A $end
$var wire 1 %* VGND $end
$var wire 1 &* VNB $end
$var wire 1 '* VPB $end
$var wire 1 (* VPWR $end
$var wire 1 )* Z $end
$var wire 1 D TE_B $end
$scope module base $end
$var wire 1 H A $end
$var wire 1 )* Z $end
$var wire 1 D TE_B $end
$upscope $end
$upscope $end
$scope module storage_1_0.cg $end
$var wire 1 ** VGND $end
$var wire 1 +* VNB $end
$var wire 1 ,* VPB $end
$var wire 1 -* VPWR $end
$var wire 1 E GCLK $end
$var wire 1 C GATE $end
$var wire 1 G CLK $end
$scope module base $end
$var wire 1 E GCLK $end
$var wire 1 .* clkn $end
$var wire 1 /* m0 $end
$var wire 1 C GATE $end
$var wire 1 G CLK $end
$scope module dlatch0 $end
$var wire 1 .* GATE $end
$var wire 1 C D $end
$var reg 1 /* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_1_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 0* VGND $end
$var wire 1 1* VNB $end
$var wire 1 2* VPB $end
$var wire 1 3* VPWR $end
$var wire 1 G Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 G Y $end
$var wire 1 4* not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_1_0.gcand $end
$var wire 1 F A $end
$var wire 1 % B $end
$var wire 1 5* VGND $end
$var wire 1 6* VNB $end
$var wire 1 7* VPB $end
$var wire 1 8* VPWR $end
$var wire 1 C X $end
$scope module base $end
$var wire 1 F A $end
$var wire 1 % B $end
$var wire 1 C X $end
$var wire 1 9* and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_1_0.select_inv_0 $end
$var wire 1 F A $end
$var wire 1 :* VGND $end
$var wire 1 ;* VNB $end
$var wire 1 <* VPB $end
$var wire 1 =* VPWR $end
$var wire 1 D Y $end
$scope module base $end
$var wire 1 F A $end
$var wire 1 D Y $end
$var wire 1 >* not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[0].bit $end
$var wire 1 f D $end
$var wire 1 ?* VGND $end
$var wire 1 @* VNB $end
$var wire 1 A* VPB $end
$var wire 1 B* VPWR $end
$var wire 1 B Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 f D $end
$var wire 1 B Q $end
$var wire 1 C* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 f D $end
$var wire 1 8 GATE $end
$var reg 1 C* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[0].obuf0 $end
$var wire 1 B A $end
$var wire 1 D* VGND $end
$var wire 1 E* VNB $end
$var wire 1 F* VPB $end
$var wire 1 G* VPWR $end
$var wire 1 H* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 B A $end
$var wire 1 H* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[1].bit $end
$var wire 1 e D $end
$var wire 1 I* VGND $end
$var wire 1 J* VNB $end
$var wire 1 K* VPB $end
$var wire 1 L* VPWR $end
$var wire 1 A Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 e D $end
$var wire 1 A Q $end
$var wire 1 M* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 e D $end
$var wire 1 8 GATE $end
$var reg 1 M* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[1].obuf0 $end
$var wire 1 A A $end
$var wire 1 N* VGND $end
$var wire 1 O* VNB $end
$var wire 1 P* VPB $end
$var wire 1 Q* VPWR $end
$var wire 1 R* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 A A $end
$var wire 1 R* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[2].bit $end
$var wire 1 d D $end
$var wire 1 S* VGND $end
$var wire 1 T* VNB $end
$var wire 1 U* VPB $end
$var wire 1 V* VPWR $end
$var wire 1 @ Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 d D $end
$var wire 1 @ Q $end
$var wire 1 W* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 d D $end
$var wire 1 8 GATE $end
$var reg 1 W* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[2].obuf0 $end
$var wire 1 @ A $end
$var wire 1 X* VGND $end
$var wire 1 Y* VNB $end
$var wire 1 Z* VPB $end
$var wire 1 [* VPWR $end
$var wire 1 \* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 @ A $end
$var wire 1 \* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[3].bit $end
$var wire 1 c D $end
$var wire 1 ]* VGND $end
$var wire 1 ^* VNB $end
$var wire 1 _* VPB $end
$var wire 1 `* VPWR $end
$var wire 1 ? Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 c D $end
$var wire 1 ? Q $end
$var wire 1 a* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 c D $end
$var wire 1 8 GATE $end
$var reg 1 a* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[3].obuf0 $end
$var wire 1 ? A $end
$var wire 1 b* VGND $end
$var wire 1 c* VNB $end
$var wire 1 d* VPB $end
$var wire 1 e* VPWR $end
$var wire 1 f* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 ? A $end
$var wire 1 f* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[4].bit $end
$var wire 1 b D $end
$var wire 1 g* VGND $end
$var wire 1 h* VNB $end
$var wire 1 i* VPB $end
$var wire 1 j* VPWR $end
$var wire 1 > Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 b D $end
$var wire 1 > Q $end
$var wire 1 k* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 b D $end
$var wire 1 8 GATE $end
$var reg 1 k* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[4].obuf0 $end
$var wire 1 > A $end
$var wire 1 l* VGND $end
$var wire 1 m* VNB $end
$var wire 1 n* VPB $end
$var wire 1 o* VPWR $end
$var wire 1 p* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 > A $end
$var wire 1 p* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[5].bit $end
$var wire 1 a D $end
$var wire 1 q* VGND $end
$var wire 1 r* VNB $end
$var wire 1 s* VPB $end
$var wire 1 t* VPWR $end
$var wire 1 = Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 a D $end
$var wire 1 = Q $end
$var wire 1 u* buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 a D $end
$var wire 1 8 GATE $end
$var reg 1 u* Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[5].obuf0 $end
$var wire 1 = A $end
$var wire 1 v* VGND $end
$var wire 1 w* VNB $end
$var wire 1 x* VPB $end
$var wire 1 y* VPWR $end
$var wire 1 z* Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 = A $end
$var wire 1 z* Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[6].bit $end
$var wire 1 ` D $end
$var wire 1 {* VGND $end
$var wire 1 |* VNB $end
$var wire 1 }* VPB $end
$var wire 1 ~* VPWR $end
$var wire 1 < Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 ` D $end
$var wire 1 < Q $end
$var wire 1 !+ buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 ` D $end
$var wire 1 8 GATE $end
$var reg 1 !+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[6].obuf0 $end
$var wire 1 < A $end
$var wire 1 "+ VGND $end
$var wire 1 #+ VNB $end
$var wire 1 $+ VPB $end
$var wire 1 %+ VPWR $end
$var wire 1 &+ Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 < A $end
$var wire 1 &+ Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[7].bit $end
$var wire 1 _ D $end
$var wire 1 '+ VGND $end
$var wire 1 (+ VNB $end
$var wire 1 )+ VPB $end
$var wire 1 *+ VPWR $end
$var wire 1 ; Q $end
$var wire 1 8 GATE $end
$scope module base $end
$var wire 1 _ D $end
$var wire 1 ; Q $end
$var wire 1 ++ buf_Q $end
$var wire 1 8 GATE $end
$scope module dlatch0 $end
$var wire 1 _ D $end
$var wire 1 8 GATE $end
$var reg 1 ++ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.bit[7].obuf0 $end
$var wire 1 ; A $end
$var wire 1 ,+ VGND $end
$var wire 1 -+ VNB $end
$var wire 1 .+ VPB $end
$var wire 1 /+ VPWR $end
$var wire 1 0+ Z $end
$var wire 1 7 TE_B $end
$scope module base $end
$var wire 1 ; A $end
$var wire 1 0+ Z $end
$var wire 1 7 TE_B $end
$upscope $end
$upscope $end
$scope module storage_2_0.cg $end
$var wire 1 1+ VGND $end
$var wire 1 2+ VNB $end
$var wire 1 3+ VPB $end
$var wire 1 4+ VPWR $end
$var wire 1 8 GCLK $end
$var wire 1 6 GATE $end
$var wire 1 : CLK $end
$scope module base $end
$var wire 1 8 GCLK $end
$var wire 1 5+ clkn $end
$var wire 1 6+ m0 $end
$var wire 1 6 GATE $end
$var wire 1 : CLK $end
$scope module dlatch0 $end
$var wire 1 5+ GATE $end
$var wire 1 6 D $end
$var reg 1 6+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_2_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 7+ VGND $end
$var wire 1 8+ VNB $end
$var wire 1 9+ VPB $end
$var wire 1 :+ VPWR $end
$var wire 1 : Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 : Y $end
$var wire 1 ;+ not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_2_0.gcand $end
$var wire 1 9 A $end
$var wire 1 % B $end
$var wire 1 <+ VGND $end
$var wire 1 =+ VNB $end
$var wire 1 >+ VPB $end
$var wire 1 ?+ VPWR $end
$var wire 1 6 X $end
$scope module base $end
$var wire 1 9 A $end
$var wire 1 % B $end
$var wire 1 6 X $end
$var wire 1 @+ and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_2_0.select_inv_0 $end
$var wire 1 9 A $end
$var wire 1 A+ VGND $end
$var wire 1 B+ VNB $end
$var wire 1 C+ VPB $end
$var wire 1 D+ VPWR $end
$var wire 1 7 Y $end
$scope module base $end
$var wire 1 9 A $end
$var wire 1 7 Y $end
$var wire 1 E+ not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[0].bit $end
$var wire 1 f D $end
$var wire 1 F+ VGND $end
$var wire 1 G+ VNB $end
$var wire 1 H+ VPB $end
$var wire 1 I+ VPWR $end
$var wire 1 5 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 f D $end
$var wire 1 5 Q $end
$var wire 1 J+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 f D $end
$var wire 1 + GATE $end
$var reg 1 J+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[0].obuf0 $end
$var wire 1 5 A $end
$var wire 1 K+ VGND $end
$var wire 1 L+ VNB $end
$var wire 1 M+ VPB $end
$var wire 1 N+ VPWR $end
$var wire 1 O+ Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 5 A $end
$var wire 1 O+ Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[1].bit $end
$var wire 1 e D $end
$var wire 1 P+ VGND $end
$var wire 1 Q+ VNB $end
$var wire 1 R+ VPB $end
$var wire 1 S+ VPWR $end
$var wire 1 4 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 e D $end
$var wire 1 4 Q $end
$var wire 1 T+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 e D $end
$var wire 1 + GATE $end
$var reg 1 T+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[1].obuf0 $end
$var wire 1 4 A $end
$var wire 1 U+ VGND $end
$var wire 1 V+ VNB $end
$var wire 1 W+ VPB $end
$var wire 1 X+ VPWR $end
$var wire 1 Y+ Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 4 A $end
$var wire 1 Y+ Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[2].bit $end
$var wire 1 d D $end
$var wire 1 Z+ VGND $end
$var wire 1 [+ VNB $end
$var wire 1 \+ VPB $end
$var wire 1 ]+ VPWR $end
$var wire 1 3 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 d D $end
$var wire 1 3 Q $end
$var wire 1 ^+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 d D $end
$var wire 1 + GATE $end
$var reg 1 ^+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[2].obuf0 $end
$var wire 1 3 A $end
$var wire 1 _+ VGND $end
$var wire 1 `+ VNB $end
$var wire 1 a+ VPB $end
$var wire 1 b+ VPWR $end
$var wire 1 c+ Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 3 A $end
$var wire 1 c+ Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[3].bit $end
$var wire 1 c D $end
$var wire 1 d+ VGND $end
$var wire 1 e+ VNB $end
$var wire 1 f+ VPB $end
$var wire 1 g+ VPWR $end
$var wire 1 2 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 c D $end
$var wire 1 2 Q $end
$var wire 1 h+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 c D $end
$var wire 1 + GATE $end
$var reg 1 h+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[3].obuf0 $end
$var wire 1 2 A $end
$var wire 1 i+ VGND $end
$var wire 1 j+ VNB $end
$var wire 1 k+ VPB $end
$var wire 1 l+ VPWR $end
$var wire 1 m+ Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 2 A $end
$var wire 1 m+ Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[4].bit $end
$var wire 1 b D $end
$var wire 1 n+ VGND $end
$var wire 1 o+ VNB $end
$var wire 1 p+ VPB $end
$var wire 1 q+ VPWR $end
$var wire 1 1 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 b D $end
$var wire 1 1 Q $end
$var wire 1 r+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 b D $end
$var wire 1 + GATE $end
$var reg 1 r+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[4].obuf0 $end
$var wire 1 1 A $end
$var wire 1 s+ VGND $end
$var wire 1 t+ VNB $end
$var wire 1 u+ VPB $end
$var wire 1 v+ VPWR $end
$var wire 1 w+ Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 1 A $end
$var wire 1 w+ Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[5].bit $end
$var wire 1 a D $end
$var wire 1 x+ VGND $end
$var wire 1 y+ VNB $end
$var wire 1 z+ VPB $end
$var wire 1 {+ VPWR $end
$var wire 1 0 Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 a D $end
$var wire 1 0 Q $end
$var wire 1 |+ buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 a D $end
$var wire 1 + GATE $end
$var reg 1 |+ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[5].obuf0 $end
$var wire 1 0 A $end
$var wire 1 }+ VGND $end
$var wire 1 ~+ VNB $end
$var wire 1 !, VPB $end
$var wire 1 ", VPWR $end
$var wire 1 #, Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 0 A $end
$var wire 1 #, Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[6].bit $end
$var wire 1 ` D $end
$var wire 1 $, VGND $end
$var wire 1 %, VNB $end
$var wire 1 &, VPB $end
$var wire 1 ', VPWR $end
$var wire 1 / Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 ` D $end
$var wire 1 / Q $end
$var wire 1 (, buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 ` D $end
$var wire 1 + GATE $end
$var reg 1 (, Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[6].obuf0 $end
$var wire 1 / A $end
$var wire 1 ), VGND $end
$var wire 1 *, VNB $end
$var wire 1 +, VPB $end
$var wire 1 ,, VPWR $end
$var wire 1 -, Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 / A $end
$var wire 1 -, Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[7].bit $end
$var wire 1 _ D $end
$var wire 1 ., VGND $end
$var wire 1 /, VNB $end
$var wire 1 0, VPB $end
$var wire 1 1, VPWR $end
$var wire 1 . Q $end
$var wire 1 + GATE $end
$scope module base $end
$var wire 1 _ D $end
$var wire 1 . Q $end
$var wire 1 2, buf_Q $end
$var wire 1 + GATE $end
$scope module dlatch0 $end
$var wire 1 _ D $end
$var wire 1 + GATE $end
$var reg 1 2, Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.bit[7].obuf0 $end
$var wire 1 . A $end
$var wire 1 3, VGND $end
$var wire 1 4, VNB $end
$var wire 1 5, VPB $end
$var wire 1 6, VPWR $end
$var wire 1 7, Z $end
$var wire 1 * TE_B $end
$scope module base $end
$var wire 1 . A $end
$var wire 1 7, Z $end
$var wire 1 * TE_B $end
$upscope $end
$upscope $end
$scope module storage_3_0.cg $end
$var wire 1 8, VGND $end
$var wire 1 9, VNB $end
$var wire 1 :, VPB $end
$var wire 1 ;, VPWR $end
$var wire 1 + GCLK $end
$var wire 1 ) GATE $end
$var wire 1 - CLK $end
$scope module base $end
$var wire 1 + GCLK $end
$var wire 1 <, clkn $end
$var wire 1 =, m0 $end
$var wire 1 ) GATE $end
$var wire 1 - CLK $end
$scope module dlatch0 $end
$var wire 1 <, GATE $end
$var wire 1 ) D $end
$var reg 1 =, Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module storage_3_0.clock_inv $end
$var wire 1 $ A $end
$var wire 1 >, VGND $end
$var wire 1 ?, VNB $end
$var wire 1 @, VPB $end
$var wire 1 A, VPWR $end
$var wire 1 - Y $end
$scope module base $end
$var wire 1 $ A $end
$var wire 1 - Y $end
$var wire 1 B, not0_out_Y $end
$upscope $end
$upscope $end
$scope module storage_3_0.gcand $end
$var wire 1 , A $end
$var wire 1 % B $end
$var wire 1 C, VGND $end
$var wire 1 D, VNB $end
$var wire 1 E, VPB $end
$var wire 1 F, VPWR $end
$var wire 1 ) X $end
$scope module base $end
$var wire 1 , A $end
$var wire 1 % B $end
$var wire 1 ) X $end
$var wire 1 G, and0_out_X $end
$upscope $end
$upscope $end
$scope module storage_3_0.select_inv_0 $end
$var wire 1 , A $end
$var wire 1 H, VGND $end
$var wire 1 I, VNB $end
$var wire 1 J, VPB $end
$var wire 1 K, VPWR $end
$var wire 1 * Y $end
$scope module base $end
$var wire 1 , A $end
$var wire 1 * Y $end
$var wire 1 L, not0_out_Y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1L,
1K,
1J,
0I,
0H,
0G,
1F,
1E,
0D,
0C,
1B,
1A,
1@,
0?,
0>,
x=,
0<,
1;,
1:,
09,
08,
z7,
16,
15,
04,
03,
x2,
11,
10,
0/,
0.,
z-,
1,,
1+,
0*,
0),
x(,
1',
1&,
0%,
0$,
z#,
1",
1!,
0~+
0}+
x|+
1{+
1z+
0y+
0x+
zw+
1v+
1u+
0t+
0s+
xr+
1q+
1p+
0o+
0n+
zm+
1l+
1k+
0j+
0i+
xh+
1g+
1f+
0e+
0d+
zc+
1b+
1a+
0`+
0_+
x^+
1]+
1\+
0[+
0Z+
zY+
1X+
1W+
0V+
0U+
xT+
1S+
1R+
0Q+
0P+
zO+
1N+
1M+
0L+
0K+
xJ+
1I+
1H+
0G+
0F+
0E+
1D+
1C+
0B+
0A+
1@+
1?+
1>+
0=+
0<+
1;+
1:+
19+
08+
07+
x6+
05+
14+
13+
02+
01+
x0+
1/+
1.+
0-+
0,+
x++
1*+
1)+
0(+
0'+
x&+
1%+
1$+
0#+
0"+
x!+
1~*
1}*
0|*
0{*
xz*
1y*
1x*
0w*
0v*
xu*
1t*
1s*
0r*
0q*
xp*
1o*
1n*
0m*
0l*
xk*
1j*
1i*
0h*
0g*
xf*
1e*
1d*
0c*
0b*
xa*
1`*
1_*
0^*
0]*
x\*
1[*
1Z*
0Y*
0X*
xW*
1V*
1U*
0T*
0S*
xR*
1Q*
1P*
0O*
0N*
xM*
1L*
1K*
0J*
0I*
xH*
1G*
1F*
0E*
0D*
xC*
1B*
1A*
0@*
0?*
0>*
1=*
1<*
0;*
0:*
19*
18*
17*
06*
05*
14*
13*
12*
01*
00*
x/*
0.*
1-*
1,*
0+*
0**
x)*
1(*
1'*
0&*
0%*
x$*
1#*
1"*
0!*
0~)
x})
1|)
1{)
0z)
0y)
xx)
1w)
1v)
0u)
0t)
xs)
1r)
1q)
0p)
0o)
xn)
1m)
1l)
0k)
0j)
xi)
1h)
1g)
0f)
0e)
xd)
1c)
1b)
0a)
0`)
x_)
1^)
1])
0\)
0[)
xZ)
1Y)
1X)
0W)
0V)
xU)
1T)
1S)
0R)
0Q)
xP)
1O)
1N)
0M)
0L)
xK)
1J)
1I)
0H)
0G)
xF)
1E)
1D)
0C)
0B)
xA)
1@)
1?)
0>)
0=)
x<)
1;)
1:)
09)
08)
07)
16)
15)
04)
03)
12)
11)
10)
0/)
0.)
1-)
1,)
1+)
0*)
0))
x()
0')
1&)
1%)
0$)
0#)
x")
1!)
1~(
0}(
0|(
x{(
1z(
1y(
0x(
0w(
xv(
1u(
1t(
0s(
0r(
xq(
1p(
1o(
0n(
0m(
xl(
1k(
1j(
0i(
0h(
xg(
1f(
1e(
0d(
0c(
xb(
1a(
1`(
0_(
0^(
x](
1\(
1[(
0Z(
0Y(
xX(
1W(
1V(
0U(
0T(
xS(
1R(
1Q(
0P(
0O(
xN(
1M(
1L(
0K(
0J(
xI(
1H(
1G(
0F(
0E(
xD(
1C(
1B(
0A(
0@(
x?(
1>(
1=(
0<(
0;(
x:(
19(
18(
07(
06(
x5(
14(
13(
02(
01(
00(
1/(
1.(
0-(
0,(
1+(
1*(
1)(
0((
0'(
0&(
1%(
1$(
1#(
0"(
0!(
0~'
1}'
1|'
1{'
0z'
0y'
0x'
0w'
1v'
1u'
1t'
0s'
0r'
0q'
1p'
1o'
1n'
0m'
0l'
0k'
1j'
1i'
0h'
0g'
1f'
1e'
0d'
0c'
0b'
1a'
1`'
0_'
0^'
0]'
0\'
1['
1Z'
0Y'
0X'
0W'
0V'
1U'
1T'
0S'
0R'
0Q'
0P'
1O'
1N'
0M'
0L'
0K'
0J'
1I'
1H'
0G'
0F'
0E'
0D'
1C'
1B'
0A'
0@'
0?'
0>'
1='
1<'
0;'
0:'
09'
08'
17'
16'
05'
04'
03'
12'
11'
00'
0/'
1.'
1-'
0,'
0+'
1*'
1)'
0('
0''
1&'
1%'
0$'
0#'
1"'
1!'
0~&
0}&
1|&
1{&
0z&
0y&
1x&
1w&
0v&
0u&
1t&
1s&
0r&
0q&
1p&
1o&
0n&
0m&
1l&
1k&
0j&
0i&
1h&
1g&
0f&
0e&
1d&
1c&
0b&
0a&
1`&
1_&
0^&
0]&
1\&
1[&
0Z&
0Y&
1X&
1W&
0V&
0U&
1T&
1S&
0R&
0Q&
1P&
1O&
0N&
0M&
1L&
1K&
0J&
0I&
1H&
1G&
0F&
0E&
1D&
1C&
0B&
0A&
1@&
1?&
0>&
0=&
1<&
1;&
0:&
09&
18&
17&
06&
05&
14&
13&
02&
01&
10&
1/&
0.&
0-&
1,&
1+&
0*&
0)&
1(&
1'&
0&&
0%&
1$&
1#&
0"&
0!&
1~%
1}%
0|%
0{%
1z%
1y%
0x%
0w%
1v%
1u%
0t%
0s%
1r%
1q%
0p%
0o%
1n%
1m%
0l%
0k%
1j%
1i%
0h%
0g%
1f%
1e%
0d%
0c%
1b%
1a%
0`%
0_%
1^%
1]%
0\%
0[%
1Z%
1Y%
0X%
0W%
1V%
1U%
0T%
0S%
1R%
1Q%
0P%
0O%
1N%
1M%
0L%
0K%
1J%
1I%
0H%
0G%
1F%
1E%
0D%
0C%
1B%
1A%
0@%
0?%
1>%
1=%
0<%
0;%
1:%
19%
08%
07%
16%
15%
04%
03%
12%
11%
00%
0/%
1.%
1-%
0,%
0+%
1*%
1)%
0(%
0'%
1&%
1%%
0$%
0#%
1"%
1!%
0~$
0}$
1|$
1{$
0z$
0y$
1x$
1w$
0v$
0u$
1t$
1s$
0r$
0q$
1p$
1o$
0n$
0m$
1l$
1k$
0j$
0i$
1h$
1g$
0f$
0e$
1d$
1c$
0b$
0a$
1`$
1_$
0^$
0]$
1\$
1[$
0Z$
0Y$
1X$
1W$
0V$
0U$
1T$
1S$
0R$
0Q$
1P$
1O$
0N$
0M$
1L$
1K$
0J$
0I$
1H$
1G$
0F$
0E$
1D$
1C$
0B$
0A$
1@$
1?$
0>$
0=$
1<$
1;$
0:$
09$
18$
17$
06$
05$
14$
13$
02$
01$
10$
1/$
0.$
0-$
1,$
1+$
0*$
0)$
1($
1'$
0&$
0%$
1$$
1#$
0"$
0!$
1~#
1}#
0|#
0{#
1z#
1y#
0x#
0w#
1v#
1u#
0t#
0s#
1r#
1q#
0p#
0o#
1n#
1m#
0l#
0k#
1j#
1i#
0h#
0g#
1f#
1e#
0d#
0c#
1b#
1a#
0`#
0_#
1^#
1]#
0\#
0[#
1Z#
1Y#
0X#
0W#
1V#
1U#
0T#
0S#
1R#
1Q#
0P#
0O#
1N#
1M#
0L#
0K#
1J#
1I#
0H#
0G#
1F#
1E#
0D#
0C#
1B#
1A#
0@#
0?#
1>#
1=#
0<#
0;#
1:#
19#
08#
07#
16#
15#
04#
03#
12#
11#
00#
0/#
1.#
1-#
0,#
0+#
1*#
1)#
0(#
0'#
1&#
1%#
0$#
0##
1"#
1!#
0~"
0}"
1|"
1{"
0z"
0y"
1x"
1w"
0v"
0u"
1t"
1s"
0r"
0q"
1p"
1o"
0n"
0m"
1l"
1k"
0j"
0i"
1h"
1g"
0f"
0e"
1d"
1c"
0b"
0a"
1`"
1_"
0^"
0]"
1\"
1["
0Z"
0Y"
1X"
1W"
0V"
0U"
1T"
1S"
0R"
0Q"
1P"
1O"
0N"
0M"
1L"
1K"
0J"
0I"
1H"
1G"
0F"
0E"
1D"
1C"
0B"
0A"
1@"
1?"
0>"
0="
1<"
1;"
0:"
09"
18"
17"
06"
05"
14"
13"
02"
01"
10"
1/"
0."
0-"
1,"
1+"
0*"
0)"
1("
1'"
0&"
0%"
1$"
1#"
0""
0!"
1~
1}
0|
0{
1z
1y
0x
0w
1v
1u
0t
0s
1r
1q
0p
0o
1n
1m
0l
0k
1j
1i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
1^
1]
x\
x[
xZ
xY
xX
xW
xV
xU
1T
1S
xR
0Q
1P
xO
xN
xM
xL
xK
xJ
xI
xH
1G
1F
xE
0D
1C
xB
xA
x@
x?
x>
x=
x<
x;
1:
19
x8
07
16
x5
x4
x3
x2
x1
x0
x/
x.
1-
0,
x+
1*
0)
b0 (
bx '
b0 &
1%
0$
b0 #
b0 "
bx !
$end
#10
1()
1/*
16+
0=,
0R
1')
0E
1.*
08
15+
0+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#20
0:(
0\
0D(
0[
0N(
0Z
0X(
0Y
0b(
0X
0l(
0W
0v(
0V
b0 !
b0 '
0")
0U
0A)
0O
0K)
0N
0U)
0M
0_)
0L
0i)
0K
0s)
0J
0})
0I
0)*
0H
0H*
0B
0R*
0A
0\*
0@
0f*
0?
0p*
0>
0z*
0=
0&+
0<
00+
0;
05(
0?(
0I(
0S(
0](
0g(
0q(
0{(
0<)
0F)
0P)
0Z)
0d)
0n)
0x)
0$*
0C*
0M*
0W*
0a*
0k*
0u*
0!+
0++
1R
0')
1E
0.*
18
05+
0<,
1T
1G
1:
1-
1-)
14*
1;+
1B,
0$
#30
0R
1')
0E
1.*
08
15+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#40
1:(
1\
1O
1H*
1B
15(
1<)
1C*
1)
x7,
x-,
x#,
xw+
xm+
xc+
xY+
bx !
bx '
xO+
0*
1G,
0L,
0C
z)*
z})
zs)
zi)
z_)
zU)
zK)
zA)
1D
1,
09*
1>*
10(
0F
0^
1f
1R
0')
1E
0.*
18
05+
0<,
0%(
0p'
18'
1T
1G
1:
1-
1w'
1~'
1k'
13'
1-)
14*
1;+
1B,
b1 #
b1 (
b1 "
b1 &
0$
#50
0/*
1=,
0R
1')
0E
1.*
08
15+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#60
0:(
0\
1D(
1[
0B
1A
0O+
05
1Y+
14
0c+
03
0m+
02
0w+
01
0#,
00
0-,
0/
b0xx !
b0xx '
07,
0.
05(
1?(
0C*
1M*
0J+
1T+
0^+
0h+
0r+
0|+
0(,
02,
06
z0+
z&+
zz*
zp*
zf*
z\*
zR*
zH*
17
0@+
1E+
1C
0)*
0})
0s)
0i)
0_)
0U)
0K)
1A)
0D
09
19*
0>*
0+(
1F
0]
1^
0f
1e
1R
0')
0.*
18
05+
1+
0<,
1%(
0v'
1p'
08'
1>'
1T
1G
1:
1-
0w'
1x'
0~'
1&(
1q'
0k'
03'
19'
1-)
14*
1;+
1B,
b10 #
b10 (
b10 "
b10 &
0$
#70
1/*
06+
0R
1')
1.*
08
15+
0+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#80
1\
b1x !
b1x '
1K)
1N
1O+
15
15(
1F)
1J+
16
00+
0&+
0z*
0p*
0f*
0\*
1R*
0H*
07
1@+
0E+
0P
z")
zv(
zl(
zb(
zX(
zN(
zD(
z:(
1Q
19
02)
17)
1+(
0S
0^
1f
1R
0')
1E
0.*
05+
1+
0<,
0}'
0p'
18'
1T
1G
1:
1-
1w'
1~'
1k'
13'
1-)
14*
1;+
1B,
b11 #
b11 (
b11 "
b11 &
0$
#90
0()
16+
0R
1')
0E
1.*
15+
0+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#100
b11 !
b11 '
1H*
1B
1C*
z7,
z-,
z#,
zw+
zm+
zc+
zY+
zO+
1*
1L,
0")
0v(
0l(
0b(
0X(
0N(
1D(
1:(
0Q
0,
07)
00(
1S
1]
1^
0')
1E
0.*
18
05+
1+
0<,
1}'
1v'
1p'
0C
06
0)
1T
1G
1:
1-
0w'
0x'
0~'
0&(
0q'
0k'
09*
0@+
0G,
1-)
14*
1;+
1B,
b0 #
b0 (
0%
0$
#110
0/*
06+
0=,
1')
0E
1.*
08
15+
0+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#120
07,
0-,
0#,
0w+
0m+
0c+
1Y+
1O+
0*
0L,
z)*
z})
zs)
zi)
z_)
zU)
zK)
zA)
1D
1,
1>*
10(
0F
0^
0')
0.*
05+
0<,
0%(
0p'
1T
1G
1:
1-
1w'
1~'
1k'
1-)
14*
1;+
1B,
b1 #
b1 (
0$
#130
1')
1.*
15+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#140
z0+
z&+
zz*
zp*
zf*
z\*
zR*
zH*
17
1E+
0)*
0})
0s)
0i)
0_)
0U)
1K)
1A)
0D
09
0>*
0+(
1F
0]
1^
0')
0.*
05+
0<,
1%(
0v'
1p'
1T
1G
1:
1-
0w'
1x'
0~'
1&(
1q'
0k'
1-)
14*
1;+
1B,
b10 #
b10 (
0$
#150
1')
1.*
15+
1<,
0T
0G
0:
0-
0-)
04*
0;+
0B,
1$
#160
00+
0&+
0z*
0p*
0f*
0\*
1R*
1H*
07
0E+
z")
zv(
zl(
zb(
zX(
zN(
zD(
z:(
1Q
19
17)
1+(
0S
0^
0')
0.*
05+
0<,
0}'
0p'
1T
1G
1:
1-
1w'
1~'
1k'
1-)
14*
1;+
1B,
b11 #
b11 (
0$
